{"version":3,"sources":["components/DogCard.js","components/DogDetails.js","components/Filter.js","components/LoadCSV.js","components/LostAnimals.js","components/FoundAnimals.js","App.js","reportWebVitals.js","index.js"],"names":["DogCard","_ref","dog","imageUrl","concat","process","replace","match","toLowerCase","React","createElement","className","src","alt","split","slice","join","href","target","rel","Link","to","DogDetails","animals","name","useParams","selectedImage","setSelectedImage","useState","find","additionalImages","filter","image","map","handleImageClick","handleCloseModal","onClick","img","index","key","Filter","setLocationFilter","setDateFilter","setGenderFilter","setTypeFilter","setSortOrder","location","setLocation","date","setDate","gender","setGender","type","setType","sort","setSort","value","onChange","e","placeholder","resetFilters","LoadCSV","setLostAnimals","setFoundAnimals","useEffect","loadCSV","url","setData","fetch","then","response","text","csvText","Papa","parse","header","dynamicTyping","complete","result","data","catch","error","console","LostAnimals","lostAnimals","locationFilter","dateFilter","genderFilter","typeFilter","sortOrder","filteredAnimals","animal","_animal$도","_animal$시군구","_animal$동읍면","_animal$세부주소","dateLost","Date","filterYear","filterMonth","filterDay","Number","locationMatch","includes","dateMatch","getFullYear","getMonth","getDate","genderMatch","typeMatch","a","b","dateA","dateB","sortAnimalsByDate","length","id","FoundAnimals","foundAnimals","dateFound","App","dogs","setDogs","foundDogs","setFoundDogs","Router","basename","window","reload","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.78cccad6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DogCard = ({ dog }) => {\r\n    const imageUrl = dog['이미지']\r\n        ? `${process.env.PUBLIC_URL}/images/${dog['이미지'].replace(/\\.([a-zA-Z]+)$/, match => match.toLowerCase())}`\r\n        : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n\r\n    return (\r\n        <div className=\"dog-card\">\r\n            <div className=\"dog-image-container\">\r\n                <img src={imageUrl} alt={dog['이름']} className=\"dog-image\" />\r\n                <div className=\"date-label\">\r\n                    <span>{dog['유실 날짜'].split('-')[2]}</span>\r\n                    <small>{dog['유실 날짜'].split('-').slice(0, 2).join('-')}</small>\r\n                </div>\r\n            </div>\r\n            <div className=\"dog-info\">\r\n                <h2>{dog['이름']}</h2>\r\n                <div className=\"dog-card-info\">\r\n                    <div className=\"info-row\">\r\n                        <span className=\"label\">유실 날짜:</span>\r\n                        <span className=\"value\">{dog['유실 날짜']}</span>\r\n                    </div>\r\n                    <div className=\"info-row\">\r\n                        <span className=\"label\">성별 (중성화):</span>\r\n                        <span className=\"value\">{dog['성별']} ({dog['중성화']})</span>\r\n                    </div>\r\n                    <div className=\"info-row\">\r\n                        <span className=\"label\">견종/묘종:</span>\r\n                        <span className=\"value\">{dog['견종/묘종']}</span>\r\n                    </div>\r\n                    <div className=\"info-row\">\r\n                        <span className=\"label\">유실 장소:</span>\r\n                        <span className=\"value\">{dog['도']} {dog['시, 군, 구']} {dog['동, 읍, 면']} {dog['세부 주소']}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"actions-container\">\r\n                    {dog['URL'] && (\r\n                        <a href={dog['URL']} target=\"_blank\" rel=\"noopener noreferrer\" className=\"action-link\">카톡 오픈채팅</a>\r\n                    )}\r\n                    <Link to={`/dog-details/${dog['이름']}`} className=\"action-link\">더 보기 ...</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DogCard;\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst DogDetails = ({ animals }) => {\r\n    const { name } = useParams();\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n    const dog = animals.find(dog => dog['이름'] === name);\r\n\r\n    if (!dog) {\r\n        return <p>해당 강아지를 찾을 수 없습니다.</p>;\r\n    }\r\n\r\n    const imageUrl = dog['이미지']\r\n        ? `${process.env.PUBLIC_URL}/images/${dog['이미지'].replace(/\\.([a-zA-Z]+)$/, match => match.toLowerCase())}`\r\n        : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n\r\n    const additionalImages = [\r\n        dog['추가 이미지1'],\r\n        dog['추가 이미지2'],\r\n        dog['추가 이미지3'],\r\n        dog['추가 이미지4']\r\n    ].filter(image => image) // Filter out empty entries\r\n     .map(image => `${process.env.PUBLIC_URL}/images/closeup/${image.replace(/\\.([a-zA-Z]+)$/, match => match.toLowerCase())}`);\r\n\r\n    const handleImageClick = (image) => {\r\n        setSelectedImage(image);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setSelectedImage(null);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dog-details container mx-auto p-4\">\r\n            <div className=\"dog-details-header\">\r\n                <h2>{dog['이름']}</h2>\r\n            </div>\r\n            <div className=\"dog-details-content\">\r\n                <table className=\"dog-details-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"dog-details-info\">\r\n                                <p><strong>유실 날짜:</strong> {dog['유실 날짜']}</p>\r\n                                <p><strong>성별:</strong> {dog['성별']}</p>\r\n                                <p><strong>견종/묘종:</strong> {dog['견종/묘종']}</p>\r\n                                <p><strong>색상:</strong> {dog['색상']}</p>\r\n                                <p><strong>몸무게:</strong> {dog['몸무게']}</p>\r\n                                <p><strong>유실 장소:</strong> {`${dog['도']} ${dog['시, 군, 구']} ${dog['동, 읍, 면']} ${dog['세부 주소']}`}</p>\r\n                                <p><strong>세부 특징:</strong> {dog['그 외 세부 특징']}</p>\r\n                                <p><strong>마지막 목격 지역:</strong> {dog['마지막 제보 지역']}</p>\r\n                                <p><strong>인식칩:</strong> {dog['인식칩']}</p>\r\n                            </td>\r\n                            <td className=\"dog-details-image\">\r\n                                <img src={imageUrl} alt={dog['이름']} className=\"dog-details-img\" onClick={() => handleImageClick(imageUrl)} />\r\n                                <div className=\"additional-images\">\r\n                                    {additionalImages.map((img, index) => (\r\n                                        <img key={index} src={img} alt={`${dog['이름']} 추가 이미지 ${index + 1}`} className=\"additional-image rounded shadow-lg\" onClick={() => handleImageClick(img)} />\r\n                                    ))}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            {selectedImage && (\r\n                <div className=\"modal\" onClick={handleCloseModal}>\r\n                    <span className=\"close\" onClick={handleCloseModal}>&times;</span>\r\n                    <img className=\"modal-content\" src={selectedImage} alt=\"Zoomed\" />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DogDetails;\r\n","// Filter.js with minor JSX adjustments to match the new CSS\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst Filter = ({ setLocationFilter, setDateFilter, setGenderFilter, setTypeFilter, setSortOrder }) => {\r\n    const [location, setLocation] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [sort, setSort] = useState('latest'); // New state for sorting\r\n\r\n\r\n    const handleLocationChange = (e) => {\r\n        setLocation(e.target.value);\r\n        setLocationFilter(e.target.value);\r\n    };\r\n\r\n    const handleDateChange = (e) => {\r\n        setDate(e.target.value);\r\n        setDateFilter(e.target.value);\r\n    };\r\n\r\n    const handleGenderChange = (e) => {\r\n        setGender(e.target.value);\r\n        setGenderFilter(e.target.value);\r\n    };\r\n\r\n    const handleTypeChange = (e) => {\r\n        setType(e.target.value);\r\n        setTypeFilter(e.target.value);\r\n    };\r\n\r\n    const handleSortChange = (e) => {\r\n        setSort(e.target.value);\r\n        setSortOrder(e.target.value); // Update parent component's sort order\r\n    };\r\n\r\n    const resetFilters = () => {\r\n        setLocation('');\r\n        setDate('');\r\n        setGender('');\r\n        setType('');\r\n        setSort('latest');\r\n        setLocationFilter('');\r\n        setDateFilter('');\r\n        setGenderFilter('');\r\n        setTypeFilter('');\r\n        setSortOrder('latest');\r\n    };\r\n\r\n    return (\r\n        <div className=\"filter-container\">\r\n            <div className=\"filter\">\r\n                <label>\r\n                    위치 필터:\r\n                    <input type=\"text\" value={location} onChange={handleLocationChange} />\r\n                </label>\r\n                <label>\r\n                    유실 날짜 필터:\r\n                    <input type=\"text\" placeholder=\"yyyy, yyyy-mm, yyyy-mm-dd\" value={date} onChange={handleDateChange} />\r\n                </label>\r\n                <label>\r\n                    성별 필터:\r\n                    <select value={gender} onChange={handleGenderChange}>\r\n                        <option value=\"\">All</option>\r\n                        <option value=\"암\">암</option>\r\n                        <option value=\"수\">수</option>\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    종류 필터:\r\n                    <select value={type} onChange={handleTypeChange}>\r\n                        <option value=\"\">All</option>\r\n                        <option value=\"개\">개</option>\r\n                        <option value=\"고양이\">고양이</option>\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    정렬:\r\n                    <select value={sort} onChange={handleSortChange}>\r\n                        <option value=\"latest\">최신순</option>\r\n                        <option value=\"recent\">오래된순</option>\r\n                    </select>\r\n                </label>\r\n            </div>\r\n            <div className=\"filter-buttons\">\r\n                <button onClick={resetFilters}>필터 초기화</button>\r\n                <button>필터 적용</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import { useEffect } from 'react';\r\nimport Papa from 'papaparse';\r\n\r\nconst LoadCSV = ({ setLostAnimals, setFoundAnimals }) => {\r\n    useEffect(() => {\r\n        const loadCSV = (url, setData) => {\r\n            fetch(url)\r\n                .then(response => response.text())\r\n                .then(csvText => {\r\n                    Papa.parse(csvText, {\r\n                        header: true,\r\n                        dynamicTyping: true,\r\n                        complete: (result) => {\r\n                            setData(result.data);\r\n                        },\r\n                    });\r\n                })\r\n                .catch(error => console.error(`Error fetching ${url}:`, error));\r\n        };\r\n\r\n        loadCSV(`${process.env.PUBLIC_URL}/지해피독 수색용 유실견 리스트.csv`, setLostAnimals);\r\n        loadCSV(`${process.env.PUBLIC_URL}/지해피독_찾음.csv`, setFoundAnimals);\r\n    }, [setLostAnimals, setFoundAnimals]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default LoadCSV;\r\n","import React, { useState } from 'react';\r\nimport DogCard from './DogCard';\r\nimport Filter from './Filter';\r\n\r\nconst LostAnimals = ({ lostAnimals }) => {\r\n    const [locationFilter, setLocationFilter] = useState('');\r\n    const [dateFilter, setDateFilter] = useState('');\r\n    const [genderFilter, setGenderFilter] = useState('');\r\n    const [typeFilter, setTypeFilter] = useState('');\r\n    const [sortOrder, setSortOrder] = useState('latest'); // New state for sorting\r\n\r\n    const applyFilters = () => {\r\n        // Filters are always applied through state changes\r\n    };\r\n\r\n    const resetFilters = () => {\r\n        setLocationFilter('');\r\n        setDateFilter('');\r\n        setGenderFilter('');\r\n        setTypeFilter('');\r\n        setSortOrder('latest'); // Reset sort order\r\n    };\r\n\r\n    const sortAnimalsByDate = (animals) => {\r\n        return animals.sort((a, b) => {\r\n            const dateA = new Date(a['유실 날짜'].replace(/\\./g, '-'));\r\n            const dateB = new Date(b['유실 날짜'].replace(/\\./g, '-'));\r\n            return sortOrder === 'latest' ? dateB - dateA : dateA - dateB;\r\n        });\r\n    };\r\n\r\n    const filteredAnimals = lostAnimals.filter(animal => {\r\n        if (!animal || !animal['유실 날짜']) {\r\n            return false;\r\n        }\r\n        const dateLost = new Date(animal['유실 날짜'].replace(/\\./g, '-'));\r\n        const [filterYear, filterMonth, filterDay] = dateFilter.split('-').map(Number);\r\n\r\n        const locationMatch = (\r\n            animal['도']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['시, 군, 구']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['동, 읍, 면']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['세부 주소']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            locationFilter === ''\r\n        );\r\n\r\n        const dateMatch = !dateFilter || (\r\n            (filterYear && dateLost.getFullYear() === filterYear) &&\r\n            (!filterMonth || dateLost.getMonth() + 1 === filterMonth) &&\r\n            (!filterDay || dateLost.getDate() === filterDay)\r\n        );\r\n\r\n        const genderMatch = (\r\n            animal['성별'] === genderFilter || \r\n            genderFilter === ''\r\n        );\r\n\r\n        const typeMatch = (\r\n            animal['종류'] === typeFilter || \r\n            typeFilter === ''\r\n        );\r\n\r\n        return locationMatch && dateMatch && genderMatch && typeMatch;\r\n    });\r\n\r\n    const sortedAnimals = sortAnimalsByDate(filteredAnimals);\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4\">\r\n            <p className=\"text-center mb-4\"><strong>총 유실동물 수: {filteredAnimals.length}</strong></p>\r\n            <div className=\"filters mb-4\">\r\n                <Filter \r\n                    setLocationFilter={setLocationFilter} \r\n                    setDateFilter={setDateFilter} \r\n                    setGenderFilter={setGenderFilter}\r\n                    setTypeFilter={setTypeFilter}\r\n                    setSortOrder={setSortOrder}\r\n                />\r\n            </div>\r\n            <section id=\"dog-list\">\r\n                <div className=\"dog-list grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\r\n                    {filteredAnimals.length > 0 ? (\r\n                        filteredAnimals.map(animal => (\r\n                            <DogCard key={animal['이름']} dog={animal} />\r\n                        ))\r\n                    ) : (\r\n                        <p className=\"text-center\">선택한 필터에 맞는 강아지가 없습니다.</p>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LostAnimals;\r\n","import React, { useState } from 'react';\r\nimport DogCard from './DogCard';\r\nimport Filter from './Filter';\r\n\r\nconst FoundAnimals = ({ foundAnimals }) => {\r\n    const [locationFilter, setLocationFilter] = useState('');\r\n    const [dateFilter, setDateFilter] = useState('');\r\n    const [genderFilter, setGenderFilter] = useState('');\r\n    const [typeFilter, setTypeFilter] = useState('');\r\n    const [sortOrder, setSortOrder] = useState('latest'); \r\n\r\n    const applyFilters = () => {\r\n        // Filters are always applied through state changes\r\n    };\r\n\r\n    const resetFilters = () => {\r\n        setLocationFilter('');\r\n        setDateFilter('');\r\n        setGenderFilter('');\r\n        setTypeFilter('');\r\n        setSortOrder('latest'); \r\n    };\r\n\r\n    const sortAnimalsByDate = (animals) => {\r\n        return animals.sort((a, b) => {\r\n            const dateA = new Date(a['유실 날짜'].replace(/\\./g, '-'));\r\n            const dateB = new Date(b['유실 날짜'].replace(/\\./g, '-'));\r\n            return sortOrder === 'latest' ? dateB - dateA : dateA - dateB;\r\n        });\r\n    };\r\n\r\n    const filteredAnimals = foundAnimals.filter(animal => {\r\n        if (!animal || !animal['유실 날짜']) {\r\n            return false;\r\n        }\r\n        const dateFound = new Date(animal['유실 날짜'].replace(/\\./g, '-'));\r\n        const [filterYear, filterMonth, filterDay] = dateFilter.split('-').map(Number);\r\n\r\n        const locationMatch = (\r\n            animal['도']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['시, 군, 구']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['동, 읍, 면']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['세부 주소']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            locationFilter === ''\r\n        );\r\n\r\n        const dateMatch = !dateFilter || (\r\n            (filterYear && dateFound.getFullYear() === filterYear) &&\r\n            (!filterMonth || dateFound.getMonth() + 1 === filterMonth) &&\r\n            (!filterDay || dateFound.getDate() === filterDay)\r\n        );\r\n\r\n        const genderMatch = (\r\n            animal['성별'] === genderFilter || \r\n            genderFilter === ''\r\n        );\r\n\r\n        const typeMatch = (\r\n            animal['종류'] === typeFilter || \r\n            typeFilter === ''\r\n        );\r\n\r\n        return locationMatch && dateMatch && genderMatch && typeMatch;\r\n    });\r\n\r\n    const sortedAnimals = sortAnimalsByDate(filteredAnimals);\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4\">\r\n            <p className=\"text-center mb-4\"><strong>총 발견된 동물 수: {filteredAnimals.length}</strong></p>\r\n            <div className=\"filters mb-4\">\r\n                <Filter \r\n                    setLocationFilter={setLocationFilter} \r\n                    setDateFilter={setDateFilter} \r\n                    setGenderFilter={setGenderFilter}\r\n                    setTypeFilter={setTypeFilter}\r\n                    setSortOrder={setSortOrder}\r\n                />\r\n            </div>\r\n            <section id=\"dog-list\">\r\n                <div className=\"dog-list grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\r\n                    {filteredAnimals.length > 0 ? (\r\n                        filteredAnimals.map(animal => (\r\n                            <DogCard key={animal['이름']} dog={animal} />\r\n                        ))\r\n                    ) : (\r\n                        <p className=\"text-center\">선택한 필터에 맞는 강아지가 없습니다.</p>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FoundAnimals;\r\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport DogCard from './components/DogCard';\nimport DogDetails from './components/DogDetails';\nimport Filter from './components/Filter';\nimport LoadCSV from './components/LoadCSV';\nimport LostAnimals from './components/LostAnimals';\nimport FoundAnimals from './components/FoundAnimals';\nimport './App.css'; // Ensure this import is present if you have App-specific styles\nimport './index.css'; // Ensure this import is present\n\nconst App = () => {\n    const [dogs, setDogs] = useState([]);\n    const [foundDogs, setFoundDogs] = useState([]);\n    const [locationFilter, setLocationFilter] = useState('');\n    const [dateFilter, setDateFilter] = useState('');\n    const [genderFilter, setGenderFilter] = useState('');\n    const [typeFilter, setTypeFilter] = useState('');\n\n    useEffect(() => {\n        // Fetch the CSV data and set the state\n    }, []);\n\n    return (\n        <Router basename=\"/ghappydog\">\n            <LoadCSV setLostAnimals={setDogs} setFoundAnimals={setFoundDogs} />\n            <div className=\"container\">\n                <header>\n                    <Link to=\"/\" onClick={() => window.location.reload()}>\n                        <img src={`${process.env.PUBLIC_URL}/logo.png`} alt=\"Logo\" className=\"logo\" />\n                    </Link>\n                    <div className=\"header-text\">\n                        <p className=\"highlight\">\"아이들이 집으로 갈 수 있도록 도와주세요\"</p>\n                        <p><strong>지해피독은 유실견 구조를 위한 봉사 모임입니다.</strong></p>\n                        <p><strong>많은 아이들이 집을 찾지 못해 길 위를 떠돌고 있습니다.</strong><br />\n                        <strong>작은 관심들이 모여 아이들이 따뜻한 가정으로 돌아갈 수 있게 도와주세요.</strong>\n                        </p>\n                        <p className=\"highlight\">우리가 포기하지 않고 찾는다면 반드시 집으로 돌아갈 수 있습니다.</p>\n                    </div>\n                    <nav className=\"nav-list\">\n                        <Link to=\"/lost\">유실 동물</Link>\n                        <Link to=\"/found\">완료 동물</Link>\n                    </nav>\n                </header>\n                <Routes>\n                    <Route path=\"/lost\" element={<LostAnimals lostAnimals={dogs} />} />\n                    <Route path=\"/found\" element={<FoundAnimals foundAnimals={foundDogs} />} />\n                    <Route path=\"/dog-details/:name\" element={<DogDetails animals={dogs.concat(foundDogs)} />} />\n                </Routes>\n            </div>\n        </Router>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}