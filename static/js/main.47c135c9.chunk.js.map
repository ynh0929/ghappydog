{"version":3,"sources":["components/DogCard.js","components/DogDetails.js","components/Filter.js","components/LoadCSV.js","components/LostAnimals.js","App.js","index.js"],"names":["DogCard","_ref","dog","imageUrl","concat","process","replace","match","toLowerCase","React","createElement","className","data-location","data-date","data-gender","src","alt","href","target","rel","Link","to","DogDetails","animals","name","useParams","find","Filter","setLocationFilter","setDateFilter","setGenderFilter","setTypeFilter","location","setLocation","useState","date","setDate","gender","setGender","type","setType","value","onChange","e","placeholder","onClick","resetFilters","LoadCSV","setLostAnimals","setFoundAnimals","useEffect","loadCSV","url","setData","fetch","then","response","text","csvText","Papa","parse","header","dynamicTyping","complete","result","data","catch","error","console","LostAnimals","lostAnimals","locationFilter","dateFilter","genderFilter","typeFilter","filteredAnimals","filter","animal","_animal$시군구","_animal$동읍면","_animal$세부주소","dateLost","Date","filterYear","filterMonth","filterDay","split","map","Number","locationMatch","includes","dateMatch","getFullYear","getMonth","getDate","genderMatch","typeMatch","length","applyFilters","id","key","App","dogs","setDogs","foundDogs","setFoundDogs","Router","basename","filePath","window","reload","Routes","Route","path","element","FoundAnimals","foundAnimals","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47c135c9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst DogCard = ({ dog }) => {\r\n    //const imageUrl = dog['이미지'] ? `${process.env.PUBLIC_URL}/images/${dog['이미지']}` : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n    const imageUrl = dog['이미지'] \r\n    ? `${process.env.PUBLIC_URL}/images/${dog['이미지'].replace(/\\.([a-zA-Z]+)$/, match => match.toLowerCase())}` \r\n    : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n\r\n    return (\r\n        <div className=\"dog-card border p-4 rounded shadow-lg relative\" data-location={dog['지역']} data-date={dog['유실 날짜']} data-gender={dog['성별']}>\r\n            <img src={imageUrl} alt={dog['이름']} className=\"w-full h-48 object-cover rounded mb-4\" />\r\n            <h2>{dog['이름']}</h2>\r\n            <p><strong>유실 날짜:</strong> {dog['유실 날짜']}</p>\r\n            <p><strong>성별: </strong>{dog['성별']}</p>\r\n            <p><strong>견종/묘종: </strong>{dog['견종/묘종']}</p>\r\n            <p><strong>유실 장소: </strong>{dog['시, 군, 구']}, {dog['동, 읍, 면']}, {dog['세부 주소']}</p>\r\n            {dog['URL'] && (\r\n                <p>\r\n                    <strong>카톡 오픈채팅: </strong>\r\n                    <a href={dog['URL']} target=\"_blank\" rel=\"noopener noreferrer\">{dog['URL']}</a>\r\n                </p>\r\n            )}\r\n            <Link to={`/dog-details/${dog['이름']}`} className=\"absolute bottom-4 right-4 text-blue-500\">더 보기 ...</Link>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DogCard;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst DogDetails = ({ animals }) => {\r\n    const { name } = useParams();\r\n    const dog = animals.find(dog => dog['이름'] === name);\r\n\r\n    if (!dog) {\r\n        return <p>해당 강아지를 찾을 수 없습니다.</p>;\r\n    }\r\n\r\n   // const imageUrl = dog['이미지'] ? `${process.env.PUBLIC_URL}/images/${dog['이미지']}` : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n   const imageUrl = dog['이미지'] \r\n   ? `${process.env.PUBLIC_URL}/images/${dog['이미지'].replace(/\\.([a-zA-Z]+)$/, match => match.toLowerCase())}` \r\n   : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n\r\n    return (\r\n        <div className=\"dog-details container mx-auto p-4\">\r\n            <img src={imageUrl} alt={dog['이름']} className=\"w-full max-w-md mx-auto mb-4\" />\r\n            <h2>{dog['이름']}</h2>\r\n                <p><strong>유실 날짜:</strong> {dog['유실 날짜']}</p>\r\n                <p><strong>성별:</strong> {dog['성별']}</p>\r\n                <p><strong>견종/묘종:</strong> {dog['견종/묘종']}</p>\r\n                <p><strong>색상:</strong> {dog['색상']}</p>\r\n                <p><strong>몸무게:</strong> {dog['몸무게']}</p>\r\n                <p><strong>유실 장소:</strong> {`${dog['시, 군, 구']}, ${dog['동, 읍, 면']}, ${dog['세부 주소']}`}</p>\r\n                <p><strong>세부 특징:</strong> {dog['그 외 세부 특징']}</p>\r\n                <p><strong>마지막 목격 지역:</strong> {dog['마지막 제보 지역']}</p>\r\n                <p><strong>인식칩:</strong> {dog['인식칩']}</p>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default DogDetails;\r\n\r\n","import React, { useState } from 'react';\r\n\r\nconst Filter = ({ setLocationFilter, setDateFilter, setGenderFilter, setTypeFilter }) => {\r\n    const [location, setLocation] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [type, setType] = useState('');\r\n\r\n    const handleLocationChange = (e) => {\r\n        setLocation(e.target.value);\r\n        setLocationFilter(e.target.value);\r\n    };\r\n\r\n    const handleDateChange = (e) => {\r\n        setDate(e.target.value);\r\n        setDateFilter(e.target.value);\r\n    };\r\n\r\n    const handleGenderChange = (e) => {\r\n        setGender(e.target.value);\r\n        setGenderFilter(e.target.value);\r\n    };\r\n\r\n    const handleTypeChange = (e) => {\r\n        setType(e.target.value);\r\n        setTypeFilter(e.target.value);\r\n    };\r\n\r\n    const resetFilters = () => {\r\n        setLocation('');\r\n        setDate('');\r\n        setGender('');\r\n        setType('');\r\n        setLocationFilter('');\r\n        setDateFilter('');\r\n        setGenderFilter('');\r\n        setTypeFilter('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"filters flex flex-col md:flex-row justify-center gap-4 mb-4\">\r\n            <label>\r\n                위치 필터:\r\n                <input \r\n                    type=\"text\" \r\n                    value={location}\r\n                    onChange={handleLocationChange} \r\n                    className=\"p-2 border border-gray-300 rounded\" \r\n                />\r\n            </label>\r\n            <label>\r\n                유실 날짜 필터:\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"yyyy, yyyy-mm, yyyy-mm-dd\" \r\n                    value={date}\r\n                    onChange={handleDateChange} \r\n                    className=\"p-2 border border-gray-300 rounded\" \r\n                />\r\n            </label>\r\n            <label>\r\n                성별 필터:\r\n                <select \r\n                    value={gender}\r\n                    onChange={handleGenderChange} \r\n                    className=\"p-2 border border-gray-300 rounded\"\r\n                >\r\n                    <option value=\"\">All</option>\r\n                    <option value=\"암\">암</option>\r\n                    <option value=\"수\">수</option>\r\n                </select>\r\n            </label>\r\n            <label>\r\n                종류 필터:\r\n                <select \r\n                    value={type}\r\n                    onChange={handleTypeChange} \r\n                    className=\"p-2 border border-gray-300 rounded\"\r\n                >\r\n                    <option value=\"\">All</option>\r\n                    <option value=\"개\">개</option>\r\n                    <option value=\"고양이\">고양이</option>\r\n                </select>\r\n            </label>\r\n            <button onClick={resetFilters} className=\"bg-gray-500 text-white py-2 px-4 rounded\">필터 초기화</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import { useEffect } from 'react';\r\nimport Papa from 'papaparse';\r\n\r\nconst LoadCSV = ({ setLostAnimals, setFoundAnimals }) => {\r\n    useEffect(() => {\r\n        const loadCSV = (url, setData) => {\r\n            fetch(url)\r\n                .then(response => response.text())\r\n                .then(csvText => {\r\n                    Papa.parse(csvText, {\r\n                        header: true,\r\n                        dynamicTyping: true,\r\n                        complete: (result) => {\r\n                            setData(result.data);\r\n                        },\r\n                    });\r\n                })\r\n                .catch(error => console.error(`Error fetching ${url}:`, error));\r\n        };\r\n\r\n        loadCSV(`${process.env.PUBLIC_URL}/지해피독 수색용 유실견 리스트.csv`, setLostAnimals);\r\n        loadCSV(`${process.env.PUBLIC_URL}/지해피독_찾음.csv`, setFoundAnimals);\r\n    }, [setLostAnimals, setFoundAnimals]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default LoadCSV;\r\n","import React, { useState } from 'react';\r\nimport DogCard from './DogCard';\r\nimport Filter from './Filter';\r\n\r\nconst LostAnimals = ({ lostAnimals }) => {\r\n    const [locationFilter, setLocationFilter] = useState('');\r\n    const [dateFilter, setDateFilter] = useState('');\r\n    const [genderFilter, setGenderFilter] = useState('');\r\n    const [typeFilter, setTypeFilter] = useState('');\r\n\r\n    const applyFilters = () => {\r\n        // We don't need to set filtersApplied because the filters are always applied\r\n    };\r\n\r\n    const resetFilters = () => {\r\n        setLocationFilter('');\r\n        setDateFilter('');\r\n        setGenderFilter('');\r\n        setTypeFilter('');\r\n    };\r\n\r\n    const filteredAnimals = lostAnimals.filter(animal => {\r\n        const dateLost = new Date(animal['유실 날짜'].replace(/\\./g, '-'));\r\n        const [filterYear, filterMonth, filterDay] = dateFilter.split('-').map(Number);\r\n\r\n        const locationMatch = (\r\n            animal['시, 군, 구']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['동, 읍, 면']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['세부 주소']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            locationFilter === ''\r\n        );\r\n\r\n        const dateMatch = !dateFilter || (\r\n            (filterYear && dateLost.getFullYear() === filterYear) &&\r\n            (!filterMonth || dateLost.getMonth() + 1 === filterMonth) &&\r\n            (!filterDay || dateLost.getDate() === filterDay)\r\n        );\r\n\r\n        const genderMatch = (\r\n            animal['성별'] === genderFilter || \r\n            genderFilter === ''\r\n        );\r\n\r\n        const typeMatch = (\r\n            animal['종류'] === typeFilter || \r\n            typeFilter === ''\r\n        );\r\n\r\n        return locationMatch && dateMatch && genderMatch && typeMatch;\r\n    });\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4\">\r\n            <h1 className=\"text-center text-2xl font-bold mb-4\">지해피독 유실 동물 리스트</h1>\r\n            <p className=\"text-center mb-4\">지해피독에 오신 것을 환영합니다. 여기서 유실된 강아지 정보를 찾고 주인과 다시 만날 수 있도록 도와주세요.</p>\r\n            <p className=\"text-center mb-4\"><strong>총 유실동물 수: {filteredAnimals.length}</strong></p>\r\n            <div className=\"filters mb-4\">\r\n                <Filter \r\n                    setLocationFilter={setLocationFilter} \r\n                    setDateFilter={setDateFilter} \r\n                    setGenderFilter={setGenderFilter}\r\n                    setTypeFilter={setTypeFilter}\r\n                />\r\n                <div className=\"my-4 flex justify-center gap-4\">\r\n                    <button onClick={applyFilters} className=\"bg-blue-500 text-white py-2 px-4 rounded\">필터 적용</button>\r\n                    <button onClick={resetFilters} className=\"bg-gray-500 text-white py-2 px-4 rounded\">필터 초기화</button>\r\n                </div>\r\n            </div>\r\n            <section id=\"dog-list\">\r\n                <div className=\"dog-list grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\r\n                    {filteredAnimals.length > 0 ? (\r\n                        filteredAnimals.map(animal => (\r\n                            <DogCard key={animal['이름']} dog={animal} />\r\n                        ))\r\n                    ) : (\r\n                        <p className=\"text-center\">선택한 필터에 맞는 강아지가 없습니다.</p>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LostAnimals;\r\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport DogCard from './components/DogCard';\nimport DogDetails from './components/DogDetails';\nimport Filter from './components/Filter';\nimport LoadCSV from './components/LoadCSV';\nimport LostAnimals from './components/LostAnimals';\nimport FoundAnimals from './components/FoundAnimals';\nimport './App.css';\n\nconst App = () => {\n    const [dogs, setDogs] = useState([]);\n    const [foundDogs, setFoundDogs] = useState([]);\n    const [locationFilter, setLocationFilter] = useState('');\n    const [dateFilter, setDateFilter] = useState('');\n    const [genderFilter, setGenderFilter] = useState('');\n    const [typeFilter, setTypeFilter] = useState('');\n\n    useEffect(() => {\n        // Fetch the CSV data and set the state\n    }, []);\n\n    return (\n        <Router basename=\"/ghappydog\">\n            <LoadCSV setDogs={setDogs} />\n            <LoadCSV setDogs={setFoundDogs} filePath=\"/지해피독_찾음.csv\" />\n            <div className=\"container\">\n                <header className=\"text-center\">\n                    <h1><Link to=\"/\" onClick={() => window.location.reload()}>지해피독 유실 동물 리스트</Link></h1>\n                    <nav className=\"flex justify-center gap-4 my-4\">\n                        <Link to=\"/\" className=\"bg-blue-500 text-white py-2 px-4 rounded\">유실 동물</Link>\n                        <Link to=\"/found\" className=\"bg-green-500 text-white py-2 px-4 rounded\">발견 동물</Link>\n                    </nav>\n                </header>\n                <Routes>\n                    <Route path=\"/\" element={<LostAnimals \n                        lostAnimals={dogs} \n                        setLocationFilter={setLocationFilter} \n                        setDateFilter={setDateFilter} \n                        setGenderFilter={setGenderFilter}\n                        setTypeFilter={setTypeFilter}\n                    />} />\n                    <Route path=\"/found\" element={<FoundAnimals \n                        foundAnimals={foundDogs} \n                        setLocationFilter={setLocationFilter} \n                        setDateFilter={setDateFilter} \n                        setGenderFilter={setGenderFilter}\n                        setTypeFilter={setTypeFilter}\n                    />} />\n                    <Route path=\"/dog-details/:name\" element={<DogDetails animals={dogs.concat(foundDogs)} />} />\n                </Routes>\n            </div>\n        </Router>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}