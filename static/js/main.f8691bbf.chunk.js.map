{"version":3,"sources":["components/DogCard.js","components/Filter.js","components/LostAnimals.js","components/FoundAnimals.js","components/DogDetails.js","components/LoadCSV.js","App.js","index.js"],"names":["DogCard","_ref","dog","imageUrl","concat","process","replace","match","toLowerCase","React","createElement","className","data-location","data-date","data-gender","src","alt","href","target","rel","Link","to","Filter","setLocationFilter","setDateFilter","setGenderFilter","setTypeFilter","type","onChange","e","value","placeholder","LostAnimals","lostAnimals","locationFilter","useState","dateFilter","genderFilter","typeFilter","filtersApplied","setFiltersApplied","filteredAnimals","filter","animal","_animal$시군구","_animal$동읍면","_animal$세부주소","dateLost","Date","filterYear","filterMonth","filterDay","split","map","Number","locationMatch","includes","dateMatch","getFullYear","getMonth","getDate","genderMatch","typeMatch","length","onClick","applyFilters","resetFilters","id","key","FoundAnimals","foundAnimals","dateFound","DogDetails","dogs","name","useParams","find","LoadCSV","setLostAnimals","setFoundAnimals","useEffect","loadCSV","url","setData","fetch","then","response","text","csvText","Papa","parse","header","dynamicTyping","complete","result","data","catch","error","console","App","Router","basename","Routes","Route","path","element","animals","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8691bbf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst DogCard = ({ dog }) => {\r\n    //const imageUrl = dog['이미지'] ? `${process.env.PUBLIC_URL}/images/${dog['이미지']}` : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n    const imageUrl = dog['이미지'] \r\n    ? `${process.env.PUBLIC_URL}/images/${dog['이미지'].replace(/\\.([a-zA-Z]+)$/, match => match.toLowerCase())}` \r\n    : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n\r\n    return (\r\n        <div className=\"dog-card\" data-location={dog['지역']} data-date={dog['유실 날짜']} data-gender={dog['성별']}>\r\n            <img src={imageUrl} alt={dog['이름']} />\r\n            <h2>{dog['이름']}</h2>\r\n            <p><strong>유실 날짜:</strong> {dog['유실 날짜']}</p>\r\n            <p><strong>성별: </strong>{dog['성별']}</p>\r\n            <p><strong>견종/묘종: </strong>{dog['견종/묘종']}</p>\r\n            <p><strong>유실 장소: </strong>{dog['시, 군, 구']}, {dog['동, 읍, 면']}, {dog['세부 주소']}</p>\r\n            {dog['URL'] && (\r\n                <p>\r\n                    <strong>카톡 오픈채팅: </strong>\r\n                    <a href={dog['URL']} target=\"_blank\" rel=\"noopener noreferrer\">{dog['URL']}</a>\r\n                </p>\r\n            )}\r\n            <div className=\"more-details\">\r\n                <Link to={`/dog-details/${dog['이름']}`}>더 보기</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DogCard;\r\n","import React from 'react';\r\n\r\nconst Filter = ({ setLocationFilter, setDateFilter, setGenderFilter, setTypeFilter }) => {\r\n    const handleLocationChange = (e) => setLocationFilter(e.target.value);\r\n    const handleDateChange = (e) => setDateFilter(e.target.value);\r\n    const handleGenderChange = (e) => setGenderFilter(e.target.value);\r\n    const handleTypeChange = (e) => setTypeFilter(e.target.value);\r\n\r\n    return (\r\n        <div className=\"filters\">\r\n            <label>\r\n                위치 필터:\r\n                <input type=\"text\" onChange={handleLocationChange} />\r\n            </label>\r\n            <label>\r\n                유실 날짜 필터:\r\n                <input type=\"text\" placeholder=\"yyyy, yyyy-mm, yyyy-mm-dd\" onChange={handleDateChange} />\r\n            </label>\r\n            <label>\r\n                성별 필터:\r\n                <select onChange={handleGenderChange}>\r\n                    <option value=\"\">All</option>\r\n                    <option value=\"암\">암</option>\r\n                    <option value=\"수\">수</option>\r\n                </select>\r\n            </label>\r\n            <label>\r\n                종류 필터:\r\n                <select onChange={handleTypeChange}>\r\n                    <option value=\"\">All</option>\r\n                    <option value=\"개\">개</option>\r\n                    <option value=\"고양이\">고양이</option>\r\n                </select>\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useState } from 'react';\r\nimport DogCard from './DogCard';\r\nimport Filter from './Filter';\r\n\r\nconst LostAnimals = ({ lostAnimals }) => {\r\n    const [locationFilter, setLocationFilter] = useState('');\r\n    const [dateFilter, setDateFilter] = useState('');\r\n    const [genderFilter, setGenderFilter] = useState('');\r\n    const [typeFilter, setTypeFilter] = useState('');\r\n    const [filtersApplied, setFiltersApplied] = useState(false);\r\n\r\n    const applyFilters = () => {\r\n        setFiltersApplied(true);\r\n    };\r\n\r\n    const resetFilters = () => {\r\n        setLocationFilter('');\r\n        setDateFilter('');\r\n        setGenderFilter('');\r\n        setTypeFilter('');\r\n        setFiltersApplied(false);\r\n    };\r\n\r\n    const filteredAnimals = lostAnimals.filter(animal => {\r\n        const dateLost = new Date(animal['유실 날짜'].replace(/\\./g, '-'));\r\n        const [filterYear, filterMonth, filterDay] = dateFilter.split('-').map(Number);\r\n\r\n        const locationMatch = (\r\n            animal['시, 군, 구']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['동, 읍, 면']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['세부 주소']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            locationFilter === ''\r\n        );\r\n\r\n        const dateMatch = !dateFilter || (\r\n            (filterYear && dateLost.getFullYear() === filterYear) &&\r\n            (!filterMonth || dateLost.getMonth() + 1 === filterMonth) &&\r\n            (!filterDay || dateLost.getDate() === filterDay)\r\n        );\r\n\r\n        const genderMatch = (\r\n            animal['성별'] === genderFilter || \r\n            genderFilter === ''\r\n        );\r\n\r\n        const typeMatch = (\r\n            animal['종류'] === typeFilter || \r\n            typeFilter === ''\r\n        );\r\n\r\n        return locationMatch && dateMatch && genderMatch && typeMatch;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h1>지해피독 유실 동물 리스트</h1>\r\n            <p>지해피독에 오신 것을 환영합니다. 여기서 유실된 강아지 정보를 찾고 주인과 다시 만날 수 있도록 도와주세요.</p>\r\n            <p><strong>총 유실동물 수: {filteredAnimals.length}</strong></p>\r\n            <div className=\"filters mb-4\">\r\n                <Filter \r\n                    setLocationFilter={setLocationFilter} \r\n                    setDateFilter={setDateFilter} \r\n                    setGenderFilter={setGenderFilter}\r\n                    setTypeFilter={setTypeFilter}\r\n                />\r\n                <div className=\"my-4 flex justify-center gap-4\">\r\n                    <button onClick={applyFilters} className=\"bg-blue-500 text-white py-2 px-4 rounded\">필터 적용</button>\r\n                    <button onClick={resetFilters} className=\"bg-gray-500 text-white py-2 px-4 rounded\">필터 초기화</button>\r\n                </div>\r\n            </div>\r\n            <section id=\"dog-list\">\r\n                <div className=\"dog-list grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                    {filtersApplied && filteredAnimals.length > 0 ? (\r\n                        filteredAnimals.map(animal => (\r\n                            <DogCard key={animal['이름']} dog={animal} />\r\n                        ))\r\n                    ) : (\r\n                        <p>선택한 필터에 맞는 강아지가 없습니다.</p>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LostAnimals;\r\n","import React, { useState } from 'react';\r\nimport DogCard from './DogCard';\r\nimport Filter from './Filter';\r\n\r\nconst FoundAnimals = ({ foundAnimals }) => {\r\n    const [locationFilter, setLocationFilter] = useState('');\r\n    const [dateFilter, setDateFilter] = useState('');\r\n    const [genderFilter, setGenderFilter] = useState('');\r\n\r\n    const filteredAnimals = foundAnimals.filter(animal => {\r\n        const dateFound = new Date(animal['발견 날짜'].replace(/\\./g, '-'));\r\n        const [filterYear, filterMonth, filterDay] = dateFilter.split('-').map(Number);\r\n\r\n        const locationMatch = (\r\n            animal['시, 군, 구']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['동, 읍, 면']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['세부 주소']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            locationFilter === ''\r\n        );\r\n\r\n        const dateMatch = !dateFilter || (\r\n            (filterYear && dateFound.getFullYear() === filterYear) &&\r\n            (!filterMonth || dateFound.getMonth() + 1 === filterMonth) &&\r\n            (!filterDay || dateFound.getDate() === filterDay)\r\n        );\r\n\r\n        const genderMatch = (\r\n            animal['성별'] === genderFilter || \r\n            genderFilter === ''\r\n        );\r\n\r\n        return locationMatch && dateMatch && genderMatch;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-2xl font-bold mb-4\">지해피독 발견된 동물 리스트</h1>\r\n            <p className=\"mb-4\">지해피독에 오신 것을 환영합니다. 여기서 발견된 강아지 정보를 찾고 주인과 다시 만날 수 있도록 도와주세요.</p>\r\n            <p className=\"font-bold mb-4\">총 발견동물 수: {filteredAnimals.length}</p>\r\n            <Filter \r\n                setLocationFilter={setLocationFilter} \r\n                setDateFilter={setDateFilter} \r\n                setGenderFilter={setGenderFilter}\r\n            />\r\n            <section id=\"dog-list\">\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    {filteredAnimals.length > 0 ? (\r\n                        filteredAnimals.map(animal => (\r\n                            <DogCard key={animal['이름']} dog={animal} />\r\n                        ))\r\n                    ) : (\r\n                        <p>선택한 필터에 맞는 강아지가 없습니다.</p>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FoundAnimals;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst DogDetails = ({ dogs }) => {\r\n    const { name } = useParams();\r\n    const dog = dogs.find(dog => dog['이름'] === name);\r\n\r\n    if (!dog) {\r\n        return <p>Dog not found.</p>;\r\n    }\r\n\r\n   // const imageUrl = dog['이미지'] ? `${process.env.PUBLIC_URL}/images/${dog['이미지']}` : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n   const imageUrl = dog['이미지'] \r\n   ? `${process.env.PUBLIC_URL}/images/${dog['이미지'].replace(/\\.([a-zA-Z]+)$/, match => match.toLowerCase())}` \r\n   : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n\r\n    return (\r\n        <div className=\"dog-details\">\r\n            <img src={imageUrl} alt={dog['이름']} />\r\n            <h2>{dog['이름']}</h2>\r\n                <p><strong>유실 날짜:</strong> {dog['유실 날짜']}</p>\r\n                <p><strong>성별:</strong> {dog['성별']}</p>\r\n                <p><strong>견종/묘종:</strong> {dog['견종/묘종']}</p>\r\n                <p><strong>색상:</strong> {dog['색상']}</p>\r\n                <p><strong>몸무게:</strong> {dog['몸무게']}</p>\r\n                <p><strong>유실 장소:</strong> {`${dog['시, 군, 구']}, ${dog['동, 읍, 면']}, ${dog['세부 주소']}`}</p>\r\n                <p><strong>세부 특징:</strong> {dog['그 외 세부 특징']}</p>\r\n                <p><strong>마지막 목격 지역:</strong> {dog['마지막 제보 지역']}</p>\r\n                <p><strong>인식칩:</strong> {dog['인식칩']}</p>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default DogDetails;\r\n\r\n","import { useEffect } from 'react';\r\nimport Papa from 'papaparse';\r\n\r\nconst LoadCSV = ({ setLostAnimals, setFoundAnimals }) => {\r\n    useEffect(() => {\r\n        const loadCSV = (url, setData) => {\r\n            fetch(url)\r\n                .then(response => response.text())\r\n                .then(csvText => {\r\n                    Papa.parse(csvText, {\r\n                        header: true,\r\n                        dynamicTyping: true,\r\n                        complete: (result) => {\r\n                            setData(result.data);\r\n                        },\r\n                    });\r\n                })\r\n                .catch(error => console.error(`Error fetching ${url}:`, error));\r\n        };\r\n\r\n        loadCSV(`${process.env.PUBLIC_URL}/지해피독 수색용 유실견 리스트.csv`, setLostAnimals);\r\n        loadCSV(`${process.env.PUBLIC_URL}/지해피독_찾음.csv`, setFoundAnimals);\r\n    }, [setLostAnimals, setFoundAnimals]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default LoadCSV;\r\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport LostAnimals from './components/LostAnimals';\nimport FoundAnimals from './components/FoundAnimals';\nimport DogDetails from './components/DogDetails';\nimport LoadCSV from './components/LoadCSV';\nimport './styles/tailwind.css';\n\nconst App = () => {\n    const [lostAnimals, setLostAnimals] = useState([]);\n    const [foundAnimals, setFoundAnimals] = useState([]);\n\n    return (\n        <Router basename=\"/ghappydog\">\n            <LoadCSV setLostAnimals={setLostAnimals} setFoundAnimals={setFoundAnimals} />\n            <div className=\"container\">\n                <header className=\"mb-4\">\n                    <nav className=\"flex justify-between items-center bg-blue-500 text-white p-4 rounded\">\n                        <ul className=\"flex space-x-4\">\n                            <li><Link to=\"/\" className=\"hover:underline\">유실 동물 리스트</Link></li>\n                            <li><Link to=\"/found\" className=\"hover:underline\">발견된 동물 리스트</Link></li>\n                        </ul>\n                    </nav>\n                </header>\n\n                <Routes>\n                    <Route path=\"/\" element={<LostAnimals lostAnimals={lostAnimals} />} />\n                    <Route path=\"/found\" element={<FoundAnimals foundAnimals={foundAnimals} />} />\n                    <Route path=\"/dog-details/:name\" element={<DogDetails animals={lostAnimals} />} />\n                </Routes>\n            </div>\n        </Router>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}