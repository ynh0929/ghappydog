{"version":3,"sources":["components/DogCard.js","components/Filter.js","components/LostAnimals.js","components/FoundAnimals.js","components/DogDetails.js","components/LoadCSV.js","App.js","index.js"],"names":["DogCard","_ref","dog","imageUrl","concat","process","replace","match","toLowerCase","React","createElement","className","data-location","data-date","data-gender","src","alt","href","target","rel","Link","to","Filter","setLocationFilter","setDateFilter","setGenderFilter","setTypeFilter","location","setLocation","useState","date","setDate","gender","setGender","type","setType","value","onChange","e","placeholder","onClick","handleFilter","LostAnimals","lostAnimals","locationFilter","dateFilter","genderFilter","typeFilter","filteredDogs","filter","_dog$시군구","_dog$동읍면","_dog$세부주소","dateLost","Date","filterYear","filterMonth","filterDay","split","map","Number","locationMatch","includes","dateMatch","getFullYear","getMonth","getDate","genderMatch","typeMatch","window","reload","length","id","key","FoundAnimals","foundAnimals","filteredAnimals","animal","_animal$시군구","_animal$동읍면","_animal$세부주소","dateFound","DogDetails","dogs","name","useParams","find","LoadCSV","setLostAnimals","setFoundAnimals","useEffect","loadCSV","url","setData","fetch","then","response","text","csvText","Papa","parse","header","dynamicTyping","complete","result","data","catch","error","console","App","Router","basename","Routes","Route","path","element","animals","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ebc6449.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst DogCard = ({ dog }) => {\r\n    //const imageUrl = dog['이미지'] ? `${process.env.PUBLIC_URL}/images/${dog['이미지']}` : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n    const imageUrl = dog['이미지'] \r\n    ? `${process.env.PUBLIC_URL}/images/${dog['이미지'].replace(/\\.([a-zA-Z]+)$/, match => match.toLowerCase())}` \r\n    : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n\r\n    return (\r\n        <div className=\"dog-card\" data-location={dog['지역']} data-date={dog['유실 날짜']} data-gender={dog['성별']}>\r\n            <img src={imageUrl} alt={dog['이름']} />\r\n            <h2>{dog['이름']}</h2>\r\n            <p><strong>유실 날짜:</strong> {dog['유실 날짜']}</p>\r\n            <p><strong>성별: </strong>{dog['성별']}</p>\r\n            <p><strong>견종/묘종: </strong>{dog['견종/묘종']}</p>\r\n            <p><strong>유실 장소: </strong>{dog['시, 군, 구']}, {dog['동, 읍, 면']}, {dog['세부 주소']}</p>\r\n            {dog['URL'] && (\r\n                <p>\r\n                    <strong>카톡 오픈채팅: </strong>\r\n                    <a href={dog['URL']} target=\"_blank\" rel=\"noopener noreferrer\">{dog['URL']}</a>\r\n                </p>\r\n            )}\r\n            <div className=\"more-details\">\r\n                <Link to={`/dog-details/${dog['이름']}`}>더 보기</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DogCard;\r\n","import React, { useState } from 'react';\r\n\r\nconst Filter = ({ setLocationFilter, setDateFilter, setGenderFilter, setTypeFilter }) => {\r\n    const [location, setLocation] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [type, setType] = useState('');\r\n\r\n    const handleFilter = () => {\r\n        setLocationFilter(location);\r\n        setDateFilter(date);\r\n        setGenderFilter(gender);\r\n        setTypeFilter(type);\r\n    };\r\n\r\n    return (\r\n        <div className=\"filter mb-4\">\r\n            <label className=\"block mb-2\">\r\n                위치 필터:\r\n                <input type=\"text\" value={location} onChange={(e) => setLocation(e.target.value)} className=\"border rounded p-2 w-full\" />\r\n            </label>\r\n            <label className=\"block mb-2\">\r\n                유실 날짜 필터:\r\n                <input type=\"text\" value={date} onChange={(e) => setDate(e.target.value)} placeholder=\"yyyy, yyyy-mm, yyyy-mm-dd\" className=\"border rounded p-2 w-full\" />\r\n            </label>\r\n            <label className=\"block mb-2\">\r\n                성별 필터:\r\n                <select value={gender} onChange={(e) => setGender(e.target.value)} className=\"border rounded p-2 w-full\">\r\n                    <option value=\"\">All</option>\r\n                    <option value=\"암\">암</option>\r\n                    <option value=\"수\">수</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"block mb-2\">\r\n                종류 필터:\r\n                <select value={type} onChange={(e) => setType(e.target.value)} className=\"border rounded p-2 w-full\">\r\n                    <option value=\"\">All</option>\r\n                    <option value=\"개\">개</option>\r\n                    <option value=\"고양이\">고양이</option>\r\n                </select>\r\n            </label>\r\n            <button onClick={handleFilter} className=\"bg-blue-500 text-white px-4 py-2 rounded\">필터 적용</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport DogCard from './DogCard';\r\nimport Filter from './Filter';\r\n\r\nconst LostAnimals = ({ lostAnimals }) => {\r\n    const [locationFilter, setLocationFilter] = useState('');\r\n    const [dateFilter, setDateFilter] = useState('');\r\n    const [genderFilter, setGenderFilter] = useState('');\r\n    const [typeFilter, setTypeFilter] = useState('');\r\n\r\n    const filteredDogs = lostAnimals.filter(dog => {\r\n        const dateLost = new Date(dog['유실 날짜'].replace(/\\./g, '-'));\r\n        const [filterYear, filterMonth, filterDay] = dateFilter.split('-').map(Number);\r\n\r\n        const locationMatch = (\r\n            dog['시, 군, 구']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            dog['동, 읍, 면']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            dog['세부 주소']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            locationFilter === ''\r\n        );\r\n\r\n        const dateMatch = !dateFilter || (\r\n            (filterYear && dateLost.getFullYear() === filterYear) &&\r\n            (!filterMonth || dateLost.getMonth() + 1 === filterMonth) &&\r\n            (!filterDay || dateLost.getDate() === filterDay)\r\n        );\r\n\r\n        const genderMatch = (\r\n            dog['성별'] === genderFilter || \r\n            genderFilter === ''\r\n        );\r\n\r\n        const typeMatch = (\r\n            dog['종류'] === typeFilter || \r\n            typeFilter === ''\r\n        );\r\n\r\n        return locationMatch && dateMatch && genderMatch && typeMatch;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-2xl font-bold mb-4\"><Link to=\"/\" onClick={() => window.location.reload()}>지해피독 유실 동물 리스트</Link></h1>\r\n            <p className=\"mb-4\">지해피독에 오신 것을 환영합니다. 여기서 유실된 강아지 정보를 찾고 주인과 다시 만날 수 있도록 도와주세요.</p>\r\n            <p className=\"font-bold mb-4\">총 유실동물 수: {filteredDogs.length}</p>\r\n            <Filter \r\n                setLocationFilter={setLocationFilter} \r\n                setDateFilter={setDateFilter} \r\n                setGenderFilter={setGenderFilter} \r\n                setTypeFilter={setTypeFilter} \r\n            />\r\n            <button className=\"bg-blue-500 text-white px-4 py-2 rounded mt-4\" onClick={() => { setLocationFilter(''); setDateFilter(''); setGenderFilter(''); setTypeFilter(''); }}>\r\n                필터 초기화\r\n            </button>\r\n            <section id=\"dog-list\">\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                    {filteredDogs.length > 0 ? (\r\n                        filteredDogs.map(dog => (\r\n                            <DogCard key={dog['이름']} dog={dog} />\r\n                        ))\r\n                    ) : (\r\n                        <p>선택한 필터에 맞는 강아지가 없습니다.</p>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LostAnimals;\r\n","import React, { useState } from 'react';\r\nimport DogCard from './DogCard';\r\nimport Filter from './Filter';\r\n\r\nconst FoundAnimals = ({ foundAnimals }) => {\r\n    const [locationFilter, setLocationFilter] = useState('');\r\n    const [dateFilter, setDateFilter] = useState('');\r\n    const [genderFilter, setGenderFilter] = useState('');\r\n\r\n    const filteredAnimals = foundAnimals.filter(animal => {\r\n        const dateFound = new Date(animal['발견 날짜'].replace(/\\./g, '-'));\r\n        const [filterYear, filterMonth, filterDay] = dateFilter.split('-').map(Number);\r\n\r\n        const locationMatch = (\r\n            animal['시, 군, 구']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['동, 읍, 면']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['세부 주소']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            locationFilter === ''\r\n        );\r\n\r\n        const dateMatch = !dateFilter || (\r\n            (filterYear && dateFound.getFullYear() === filterYear) &&\r\n            (!filterMonth || dateFound.getMonth() + 1 === filterMonth) &&\r\n            (!filterDay || dateFound.getDate() === filterDay)\r\n        );\r\n\r\n        const genderMatch = (\r\n            animal['성별'] === genderFilter || \r\n            genderFilter === ''\r\n        );\r\n\r\n        return locationMatch && dateMatch && genderMatch;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-2xl font-bold mb-4\">지해피독 발견된 동물 리스트</h1>\r\n            <p className=\"mb-4\">지해피독에 오신 것을 환영합니다. 여기서 발견된 강아지 정보를 찾고 주인과 다시 만날 수 있도록 도와주세요.</p>\r\n            <p className=\"font-bold mb-4\">총 발견동물 수: {filteredAnimals.length}</p>\r\n            <Filter \r\n                setLocationFilter={setLocationFilter} \r\n                setDateFilter={setDateFilter} \r\n                setGenderFilter={setGenderFilter}\r\n            />\r\n            <section id=\"dog-list\">\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    {filteredAnimals.length > 0 ? (\r\n                        filteredAnimals.map(animal => (\r\n                            <DogCard key={animal['이름']} dog={animal} />\r\n                        ))\r\n                    ) : (\r\n                        <p>선택한 필터에 맞는 강아지가 없습니다.</p>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FoundAnimals;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst DogDetails = ({ dogs }) => {\r\n    const { name } = useParams();\r\n    const dog = dogs.find(dog => dog['이름'] === name);\r\n\r\n    if (!dog) {\r\n        return <p>Dog not found.</p>;\r\n    }\r\n\r\n   // const imageUrl = dog['이미지'] ? `${process.env.PUBLIC_URL}/images/${dog['이미지']}` : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n   const imageUrl = dog['이미지'] \r\n   ? `${process.env.PUBLIC_URL}/images/${dog['이미지'].replace(/\\.([a-zA-Z]+)$/, match => match.toLowerCase())}` \r\n   : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n\r\n    return (\r\n        <div className=\"dog-details\">\r\n            <img src={imageUrl} alt={dog['이름']} />\r\n            <h2>{dog['이름']}</h2>\r\n                <p><strong>유실 날짜:</strong> {dog['유실 날짜']}</p>\r\n                <p><strong>성별:</strong> {dog['성별']}</p>\r\n                <p><strong>견종/묘종:</strong> {dog['견종/묘종']}</p>\r\n                <p><strong>색상:</strong> {dog['색상']}</p>\r\n                <p><strong>몸무게:</strong> {dog['몸무게']}</p>\r\n                <p><strong>유실 장소:</strong> {`${dog['시, 군, 구']}, ${dog['동, 읍, 면']}, ${dog['세부 주소']}`}</p>\r\n                <p><strong>세부 특징:</strong> {dog['그 외 세부 특징']}</p>\r\n                <p><strong>마지막 목격 지역:</strong> {dog['마지막 제보 지역']}</p>\r\n                <p><strong>인식칩:</strong> {dog['인식칩']}</p>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default DogDetails;\r\n\r\n","import { useEffect } from 'react';\r\nimport Papa from 'papaparse';\r\n\r\nconst LoadCSV = ({ setLostAnimals, setFoundAnimals }) => {\r\n    useEffect(() => {\r\n        const loadCSV = (url, setData) => {\r\n            fetch(url)\r\n                .then(response => response.text())\r\n                .then(csvText => {\r\n                    Papa.parse(csvText, {\r\n                        header: true,\r\n                        dynamicTyping: true,\r\n                        complete: (result) => {\r\n                            setData(result.data);\r\n                        },\r\n                    });\r\n                })\r\n                .catch(error => console.error(`Error fetching ${url}:`, error));\r\n        };\r\n\r\n        loadCSV(`${process.env.PUBLIC_URL}/지해피독 수색용 유실견 리스트.csv`, setLostAnimals);\r\n        loadCSV(`${process.env.PUBLIC_URL}/지해피독_찾음.csv`, setFoundAnimals);\r\n    }, [setLostAnimals, setFoundAnimals]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default LoadCSV;\r\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport LostAnimals from './components/LostAnimals';\nimport FoundAnimals from './components/FoundAnimals';\nimport DogDetails from './components/DogDetails';\nimport LoadCSV from './components/LoadCSV';\nimport './styles/tailwind.css';\n\nconst App = () => {\n    const [lostAnimals, setLostAnimals] = useState([]);\n    const [foundAnimals, setFoundAnimals] = useState([]);\n\n    return (\n        <Router basename=\"/ghappydog\">\n            <LoadCSV setLostAnimals={setLostAnimals} setFoundAnimals={setFoundAnimals} />\n            <div className=\"container mx-auto p-4\">\n                <header className=\"mb-4\">\n                    <nav className=\"flex justify-between items-center bg-blue-500 text-white p-4 rounded\">\n                        <ul className=\"flex space-x-4\">\n                            <li><Link to=\"/\" className=\"hover:underline\">유실 동물 리스트</Link></li>\n                            <li><Link to=\"/found\" className=\"hover:underline\">발견된 동물 리스트</Link></li>\n                        </ul>\n                    </nav>\n                </header>\n\n                <Routes>\n                    <Route path=\"/\" element={<LostAnimals lostAnimals={lostAnimals} />} />\n                    <Route path=\"/found\" element={<FoundAnimals foundAnimals={foundAnimals} />} />\n                    <Route path=\"/dog-details/:name\" element={<DogDetails animals={lostAnimals} />} />\n                </Routes>\n            </div>\n        </Router>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}