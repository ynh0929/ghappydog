{"version":3,"sources":["components/DogCard.js","components/Filter.js","components/LostAnimals.js","components/FoundAnimals.js","components/LoadCSV.js","App.js","index.js"],"names":["DogCard","_ref","dog","imageUrl","concat","process","replace","match","toLowerCase","React","createElement","className","data-location","data-date","data-gender","src","alt","href","target","rel","Link","to","Filter","setLocationFilter","setDateFilter","setGenderFilter","setTypeFilter","setSortOrder","handleGenderChange","e","value","type","onChange","placeholder","LostAnimals","lostAnimals","locationFilter","useState","dateFilter","genderFilter","typeFilter","filteredDogs","filter","_dog$시군구","_dog$동읍면","_dog$세부주소","dateLost","Date","filterYear","filterMonth","filterDay","split","map","Number","locationMatch","includes","dateMatch","getFullYear","getMonth","getDate","genderMatch","typeMatch","length","id","key","FoundAnimals","foundAnimals","filteredAnimals","animal","_animal$시군구","_animal$동읍면","_animal$세부주소","dateFound","LoadCSV","setLostAnimals","setFoundAnimals","useEffect","loadCSV","url","setData","fetch","then","response","text","csvText","Papa","parse","header","dynamicTyping","complete","result","data","catch","error","console","App","Router","Routes","Route","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca396a30.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DogCard = ({ dog }) => {\r\n    //const imageUrl = dog['이미지'] ? `${process.env.PUBLIC_URL}/images/${dog['이미지']}` : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n    const imageUrl = dog['이미지'] \r\n    ? `${process.env.PUBLIC_URL}/images/${dog['이미지'].replace(/\\.([a-zA-Z]+)$/, match => match.toLowerCase())}` \r\n    : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n\r\n    return (\r\n        <div className=\"dog-card\" data-location={dog['지역']} data-date={dog['유실 날짜']} data-gender={dog['성별']}>\r\n            <img src={imageUrl} alt={dog['이름']} />\r\n            <h2>{dog['이름']}</h2>\r\n            <p><strong>유실 날짜:</strong> {dog['유실 날짜']}</p>\r\n            <p><strong>성별: </strong>{dog['성별']}</p>\r\n            <p><strong>견종/묘종: </strong>{dog['견종/묘종']}</p>\r\n            <p><strong>유실 장소: </strong>{dog['시, 군, 구']}, {dog['동, 읍, 면']}, {dog['세부 주소']}</p>\r\n            {dog['URL'] && (\r\n                <p>\r\n                    <strong>카톡 오픈채팅: </strong>\r\n                    <a href={dog['URL']} target=\"_blank\" rel=\"noopener noreferrer\">{dog['URL']}</a>\r\n                </p>\r\n            )}\r\n            <div className=\"more-details\">\r\n                <Link to={`/dog-details/${dog['이름']}`}>더 보기</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DogCard;\r\n","import React from 'react';\r\n\r\nconst Filter = ({ setLocationFilter, setDateFilter, setGenderFilter, setTypeFilter, setSortOrder }) => {\r\n    const handleLocationChange = (e) => setLocationFilter(e.target.value);\r\n    const handleDateChange = (e) => setDateFilter(e.target.value);\r\n    const handleGenderChange = (e) => setGenderFilter(e.target.value);\r\n    const handleTypeChange = (e) => setTypeFilter(e.target.value);\r\n    //const handleSortOrderChange = (e) => setSortOrder(e.target.value);\r\n    \r\n    return (\r\n        <div className=\"filter\">\r\n            <label>\r\n                위치:\r\n                <input type=\"text\" onChange={handleLocationChange} />\r\n            </label>\r\n            <label>\r\n                유실 날짜:\r\n                <input type=\"text\" placeholder=\"yyyy, yyyy-mm, yyyy-mm-dd\" onChange={handleDateChange} />\r\n            </label>\r\n            <label>\r\n                성별:\r\n                <select onChange={handleGenderChange}>\r\n                    <option value=\"\">All</option>\r\n                    <option value=\"암\">암</option>\r\n                    <option value=\"수\">수</option>\r\n                </select>\r\n            </label>\r\n            <label>\r\n                종류:\r\n                <select onChange={handleGenderChange}>\r\n                    <option value=\"\">All</option>\r\n                    <option value=\"개\">개</option>\r\n                    <option value=\"고양이\">고양이</option>\r\n                </select>\r\n            </label>\r\n            {/* <label>\r\n                정렬 순서:\r\n                <select onChange={handleSortOrderChange}>\r\n                    <option value=\"asc\">오름차순</option>\r\n                    <option value=\"desc\">내림차순</option>\r\n                </select>\r\n            </label> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useState } from 'react';\r\nimport DogCard from './DogCard';\r\nimport Filter from './Filter';\r\n\r\nconst LostAnimals = ({ lostAnimals }) => {\r\n    const [locationFilter, setLocationFilter] = useState('');\r\n    const [dateFilter, setDateFilter] = useState('');\r\n    const [genderFilter, setGenderFilter] = useState('');\r\n    const [typeFilter, setTypeFilter] = useState('');\r\n\r\n    const filteredDogs = lostAnimals.filter(dog => {\r\n        const dateLost = new Date(dog['유실 날짜'].replace(/\\./g, '-'));\r\n        const [filterYear, filterMonth, filterDay] = dateFilter.split('-').map(Number);\r\n\r\n        const locationMatch = (\r\n            dog['시, 군, 구']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            dog['동, 읍, 면']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            dog['세부 주소']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            locationFilter === ''\r\n        );\r\n\r\n        const dateMatch = !dateFilter || (\r\n            (filterYear && dateLost.getFullYear() === filterYear) &&\r\n            (!filterMonth || dateLost.getMonth() + 1 === filterMonth) &&\r\n            (!filterDay || dateLost.getDate() === filterDay)\r\n        );\r\n\r\n        const genderMatch = (\r\n            dog['성별'] === genderFilter || \r\n            genderFilter === ''\r\n        );\r\n\r\n        const typeMatch = (\r\n            dog['종류'] === typeFilter || \r\n            typeFilter === ''\r\n        );\r\n\r\n        return locationMatch && dateMatch && genderMatch && typeMatch;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h1>지해피독 유실 동물 리스트</h1>\r\n            <p>지해피독에 오신 것을 환영합니다. 여기서 유실된 강아지 정보를 찾고 주인과 다시 만날 수 있도록 도와주세요.</p>\r\n            <p>총 유실동물 수: {filteredDogs.length}</p>\r\n            <Filter \r\n                setLocationFilter={setLocationFilter} \r\n                setDateFilter={setDateFilter} \r\n                setGenderFilter={setGenderFilter} \r\n                setTypeFilter={setTypeFilter} \r\n            />\r\n            <section id=\"dog-list\">\r\n                <div className=\"dog-list\">\r\n                    {filteredDogs.length > 0 ? (\r\n                        filteredDogs.map(dog => (\r\n                            <DogCard key={dog['이름']} dog={dog} />\r\n                        ))\r\n                    ) : (\r\n                        <p>선택한 필터에 맞는 강아지가 없습니다.</p>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LostAnimals;\r\n","import React, { useState } from 'react';\r\nimport DogCard from './DogCard';\r\nimport Filter from './Filter';\r\n\r\nconst FoundAnimals = ({ foundAnimals }) => {\r\n    const [locationFilter, setLocationFilter] = useState('');\r\n    const [dateFilter, setDateFilter] = useState('');\r\n    const [genderFilter, setGenderFilter] = useState('');\r\n\r\n    const filteredAnimals = foundAnimals.filter(animal => {\r\n        const dateFound = new Date(animal['발견 날짜'].replace(/\\./g, '-'));\r\n        const [filterYear, filterMonth, filterDay] = dateFilter.split('-').map(Number);\r\n\r\n        const locationMatch = (\r\n            animal['시, 군, 구']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['동, 읍, 면']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['세부 주소']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            locationFilter === ''\r\n        );\r\n\r\n        const dateMatch = !dateFilter || (\r\n            (filterYear && dateFound.getFullYear() === filterYear) &&\r\n            (!filterMonth || dateFound.getMonth() + 1 === filterMonth) &&\r\n            (!filterDay || dateFound.getDate() === filterDay)\r\n        );\r\n\r\n        const genderMatch = (\r\n            animal['성별'] === genderFilter || \r\n            genderFilter === ''\r\n        );\r\n\r\n        return locationMatch && dateMatch && genderMatch;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h1>지해피독 발견된 동물 리스트</h1>\r\n            <p>지해피독에 오신 것을 환영합니다. 여기서 발견된 강아지 정보를 찾고 주인과 다시 만날 수 있도록 도와주세요.</p>\r\n            <p>총 발견동물 수: {filteredAnimals.length}</p>\r\n            <Filter \r\n                setLocationFilter={setLocationFilter} \r\n                setDateFilter={setDateFilter} \r\n                setGenderFilter={setGenderFilter}\r\n            />\r\n            <section id=\"dog-list\">\r\n                <div className=\"dog-list\">\r\n                    {filteredAnimals.length > 0 ? (\r\n                        filteredAnimals.map(animal => (\r\n                            <DogCard key={animal['이름']} dog={animal} />\r\n                        ))\r\n                    ) : (\r\n                        <p>선택한 필터에 맞는 강아지가 없습니다.</p>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FoundAnimals;\r\n","import { useEffect } from 'react';\r\nimport Papa from 'papaparse';\r\n\r\nconst LoadCSV = ({ setLostAnimals, setFoundAnimals }) => {\r\n    useEffect(() => {\r\n        const loadCSV = (url, setData) => {\r\n            fetch(url)\r\n                .then(response => response.text())\r\n                .then(csvText => {\r\n                    Papa.parse(csvText, {\r\n                        header: true,\r\n                        dynamicTyping: true,\r\n                        complete: (result) => {\r\n                            setData(result.data);\r\n                        },\r\n                    });\r\n                })\r\n                .catch(error => console.error(`Error fetching ${url}:`, error));\r\n        };\r\n\r\n        loadCSV(`${process.env.PUBLIC_URL}/지해피독 수색용 유실견 리스트.csv`, setLostAnimals);\r\n        loadCSV(`${process.env.PUBLIC_URL}/지해피독_찾음.csv`, setFoundAnimals);\r\n    }, [setLostAnimals, setFoundAnimals]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default LoadCSV;\r\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport LostAnimals from './components/LostAnimals';\nimport FoundAnimals from './components/FoundAnimals';\nimport LoadCSV from './components/LoadCSV';\nimport './App.css';\n\nconst App = () => {\n    const [lostAnimals, setLostAnimals] = useState([]);\n    const [foundAnimals, setFoundAnimals] = useState([]);\n\n    return (\n        <Router>\n            <LoadCSV setLostAnimals={setLostAnimals} setFoundAnimals={setFoundAnimals} />\n            <div className=\"container\">\n                <header>\n                    <nav>\n                        <ul className=\"nav-list\">\n                            <li><Link to=\"/\">유실 동물 리스트</Link></li>\n                            <li><Link to=\"/found\">발견된 동물 리스트</Link></li>\n                        </ul>\n                    </nav>\n                </header>\n\n                <Routes>\n                    <Route path=\"/\" element={<LostAnimals lostAnimals={lostAnimals} />} />\n                    <Route path=\"/found\" element={<FoundAnimals foundAnimals={foundAnimals} />} />\n                </Routes>\n            </div>\n        </Router>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}