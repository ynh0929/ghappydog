{"version":3,"sources":["components/DogCard.js","components/DogDetails.js","components/Filter.js","components/LoadCSV.js","components/LostAnimals.js","components/FoundAnimals.js","App.js","reportWebVitals.js","index.js"],"names":["DogCard","_ref","dog","imageUrl","concat","process","replace","match","toLowerCase","React","createElement","className","style","padding","src","alt","href","target","rel","display","wordWrap","Link","to","DogDetails","animals","name","useParams","find","Filter","setLocationFilter","setDateFilter","setGenderFilter","setTypeFilter","location","setLocation","useState","date","setDate","gender","setGender","type","setType","value","onChange","e","placeholder","onClick","resetFilters","LoadCSV","setLostAnimals","setFoundAnimals","useEffect","loadCSV","url","setData","fetch","then","response","text","csvText","Papa","parse","header","dynamicTyping","complete","result","data","catch","error","console","LostAnimals","lostAnimals","locationFilter","dateFilter","genderFilter","typeFilter","filteredAnimals","filter","animal","_animal$시군구","_animal$동읍면","_animal$세부주소","dateLost","Date","filterYear","filterMonth","filterDay","split","map","Number","locationMatch","includes","dateMatch","getFullYear","getMonth","getDate","genderMatch","typeMatch","length","applyFilters","id","key","FoundAnimals","foundAnimals","dateFound","App","dogs","setDogs","foundDogs","setFoundDogs","Router","basename","window","reload","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c83ac850.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DogCard = ({ dog }) => {\r\n    const imageUrl = dog['이미지']\r\n        ? `${process.env.PUBLIC_URL}/images/${dog['이미지'].replace(/\\.([a-zA-Z]+)$/, match => match.toLowerCase())}`\r\n        : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n\r\n    return (\r\n        <div className=\"dog-card border p-4 rounded shadow-lg relative\" style={{ padding: '20px' }}>\r\n            <img src={imageUrl} alt={dog['이름']} className=\"w-full h-48 object-cover rounded mb-4\" />\r\n            <h2>{dog['이름']}</h2>\r\n            <div className=\"dog-card-info\">\r\n                <p className=\"info\"><strong>유실 날짜:</strong> {dog['유실 날짜']}</p>\r\n                <p className=\"info\"><strong>성별:</strong> {dog['성별']}</p>\r\n                <p className=\"info\"><strong>견종/묘종:</strong> {dog['견종/묘종']}</p>\r\n                <p className=\"info\"><strong>유실 장소:</strong> {dog['시, 군, 구']}, {dog['동, 읍, 면']}, {dog['세부 주소']}</p>\r\n                {dog['URL'] && (\r\n                    <p className=\"info\">\r\n                        <strong>카톡 오픈채팅:</strong>\r\n                        <a href={dog['URL']} target=\"_blank\" rel=\"noopener noreferrer\" style={{ display: 'inline-block', wordWrap: 'break-word' }}>{dog['URL']}</a>\r\n                    </p>\r\n                )}\r\n            </div>\r\n            <div className=\"more-details-container\">\r\n                <Link to={`/dog-details/${dog['이름']}`} className=\"more-details\">더 보기 ...</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DogCard;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst DogDetails = ({ animals }) => {\r\n    const { name } = useParams();\r\n    const dog = animals.find(dog => dog['이름'] === name);\r\n\r\n    if (!dog) {\r\n        return <p>해당 강아지를 찾을 수 없습니다.</p>;\r\n    }\r\n\r\n    const imageUrl = dog['이미지']\r\n        ? `${process.env.PUBLIC_URL}/images/${dog['이미지'].replace(/\\.([a-zA-Z]+)$/, match => match.toLowerCase())}`\r\n        : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n\r\n    return (\r\n        <div className=\"dog-details container mx-auto p-4\">\r\n            <div className=\"dog-details-content\">\r\n                <div className=\"dog-details-info\">\r\n                    <h2>{dog['이름']}</h2>\r\n                    <p><strong>유실 날짜:</strong> {dog['유실 날짜']}</p>\r\n                    <p><strong>성별:</strong> {dog['성별']}</p>\r\n                    <p><strong>견종/묘종:</strong> {dog['견종/묘종']}</p>\r\n                    <p><strong>색상:</strong> {dog['색상']}</p>\r\n                    <p><strong>몸무게:</strong> {dog['몸무게']}</p>\r\n                    <p><strong>유실 장소:</strong> {`${dog['시, 군, 구']}, ${dog['동, 읍, 면']}, ${dog['세부 주소']}`}</p>\r\n                    <p><strong>세부 특징:</strong> {dog['그 외 세부 특징']}</p>\r\n                    <p><strong>마지막 목격 지역:</strong> {dog['마지막 제보 지역']}</p>\r\n                    <p><strong>인식칩:</strong> {dog['인식칩']}</p>\r\n                </div>\r\n                <div className=\"dog-details-image\">\r\n                    <img src={imageUrl} alt={dog['이름']} className=\"dog-details-img\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DogDetails;\r\n","import React, { useState } from 'react';\r\n\r\nconst Filter = ({ setLocationFilter, setDateFilter, setGenderFilter, setTypeFilter }) => {\r\n    const [location, setLocation] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [type, setType] = useState('');\r\n\r\n    const handleLocationChange = (e) => {\r\n        setLocation(e.target.value);\r\n        setLocationFilter(e.target.value);\r\n    };\r\n\r\n    const handleDateChange = (e) => {\r\n        setDate(e.target.value);\r\n        setDateFilter(e.target.value);\r\n    };\r\n\r\n    const handleGenderChange = (e) => {\r\n        setGender(e.target.value);\r\n        setGenderFilter(e.target.value);\r\n    };\r\n\r\n    const handleTypeChange = (e) => {\r\n        setType(e.target.value);\r\n        setTypeFilter(e.target.value);\r\n    };\r\n\r\n    const resetFilters = () => {\r\n        setLocation('');\r\n        setDate('');\r\n        setGender('');\r\n        setType('');\r\n        setLocationFilter('');\r\n        setDateFilter('');\r\n        setGenderFilter('');\r\n        setTypeFilter('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"filter\">\r\n            <label>\r\n                위치 필터:\r\n                <input type=\"text\" value={location} onChange={handleLocationChange} />\r\n            </label>\r\n            <label>\r\n                유실 날짜 필터:\r\n                <input type=\"text\" placeholder=\"yyyy, yyyy-mm, yyyy-mm-dd\" value={date} onChange={handleDateChange} />\r\n            </label>\r\n            <label>\r\n                성별 필터:\r\n                <select value={gender} onChange={handleGenderChange}>\r\n                    <option value=\"\">All</option>\r\n                    <option value=\"암\">암</option>\r\n                    <option value=\"수\">수</option>\r\n                </select>\r\n            </label>\r\n            <label>\r\n                종류 필터:\r\n                <select value={type} onChange={handleTypeChange}>\r\n                    <option value=\"\">All</option>\r\n                    <option value=\"개\">개</option>\r\n                    <option value=\"고양이\">고양이</option>\r\n                </select>\r\n            </label>\r\n            <div className=\"filter-buttons\">\r\n                <button onClick={resetFilters}>필터 초기화</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import { useEffect } from 'react';\r\nimport Papa from 'papaparse';\r\n\r\nconst LoadCSV = ({ setLostAnimals, setFoundAnimals }) => {\r\n    useEffect(() => {\r\n        const loadCSV = (url, setData) => {\r\n            fetch(url)\r\n                .then(response => response.text())\r\n                .then(csvText => {\r\n                    Papa.parse(csvText, {\r\n                        header: true,\r\n                        dynamicTyping: true,\r\n                        complete: (result) => {\r\n                            setData(result.data);\r\n                        },\r\n                    });\r\n                })\r\n                .catch(error => console.error(`Error fetching ${url}:`, error));\r\n        };\r\n\r\n        loadCSV(`${process.env.PUBLIC_URL}/지해피독 수색용 유실견 리스트.csv`, setLostAnimals);\r\n        loadCSV(`${process.env.PUBLIC_URL}/지해피독_찾음.csv`, setFoundAnimals);\r\n    }, [setLostAnimals, setFoundAnimals]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default LoadCSV;\r\n","import React, { useState } from 'react';\r\nimport DogCard from './DogCard';\r\nimport Filter from './Filter';\r\n\r\nconst LostAnimals = ({ lostAnimals }) => {\r\n    const [locationFilter, setLocationFilter] = useState('');\r\n    const [dateFilter, setDateFilter] = useState('');\r\n    const [genderFilter, setGenderFilter] = useState('');\r\n    const [typeFilter, setTypeFilter] = useState('');\r\n\r\n    const applyFilters = () => {\r\n        // Filters are always applied through state changes\r\n    };\r\n\r\n    const resetFilters = () => {\r\n        setLocationFilter('');\r\n        setDateFilter('');\r\n        setGenderFilter('');\r\n        setTypeFilter('');\r\n    };\r\n\r\n    const filteredAnimals = lostAnimals.filter(animal => {\r\n        const dateLost = new Date(animal['유실 날짜'].replace(/\\./g, '-'));\r\n        const [filterYear, filterMonth, filterDay] = dateFilter.split('-').map(Number);\r\n\r\n        const locationMatch = (\r\n            animal['시, 군, 구']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['동, 읍, 면']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['세부 주소']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            locationFilter === ''\r\n        );\r\n\r\n        const dateMatch = !dateFilter || (\r\n            (filterYear && dateLost.getFullYear() === filterYear) &&\r\n            (!filterMonth || dateLost.getMonth() + 1 === filterMonth) &&\r\n            (!filterDay || dateLost.getDate() === filterDay)\r\n        );\r\n\r\n        const genderMatch = (\r\n            animal['성별'] === genderFilter || \r\n            genderFilter === ''\r\n        );\r\n\r\n        const typeMatch = (\r\n            animal['종류'] === typeFilter || \r\n            typeFilter === ''\r\n        );\r\n\r\n        return locationMatch && dateMatch && genderMatch && typeMatch;\r\n    });\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4\">\r\n            <p className=\"text-center mb-4\"><strong>총 유실동물 수: {filteredAnimals.length}</strong></p>\r\n            <div className=\"filters mb-4\">\r\n                <Filter \r\n                    setLocationFilter={setLocationFilter} \r\n                    setDateFilter={setDateFilter} \r\n                    setGenderFilter={setGenderFilter}\r\n                    setTypeFilter={setTypeFilter}\r\n                />\r\n                <div className=\"my-4 flex justify-center gap-4\">\r\n                    <button onClick={applyFilters} className=\"bg-blue-500 text-white py-2 px-4 rounded\">필터 적용</button>\r\n                </div>\r\n            </div>\r\n            <section id=\"dog-list\">\r\n                <div className=\"dog-list grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\r\n                    {filteredAnimals.length > 0 ? (\r\n                        filteredAnimals.map(animal => (\r\n                            <DogCard key={animal['이름']} dog={animal} />\r\n                        ))\r\n                    ) : (\r\n                        <p className=\"text-center\">선택한 필터에 맞는 강아지가 없습니다.</p>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LostAnimals;\r\n","import React, { useState } from 'react';\r\nimport DogCard from './DogCard';\r\nimport Filter from './Filter';\r\n\r\nconst FoundAnimals = ({ foundAnimals }) => {\r\n    const [locationFilter, setLocationFilter] = useState('');\r\n    const [dateFilter, setDateFilter] = useState('');\r\n    const [genderFilter, setGenderFilter] = useState('');\r\n    const [typeFilter, setTypeFilter] = useState('');\r\n\r\n    const applyFilters = () => {\r\n        // Filters are always applied through state changes\r\n    };\r\n\r\n    const resetFilters = () => {\r\n        setLocationFilter('');\r\n        setDateFilter('');\r\n        setGenderFilter('');\r\n        setTypeFilter('');\r\n    };\r\n\r\n    const filteredAnimals = foundAnimals.filter(animal => {\r\n        const dateFound = new Date(animal['유실 날짜'].replace(/\\./g, '-'));\r\n        const [filterYear, filterMonth, filterDay] = dateFilter.split('-').map(Number);\r\n\r\n        const locationMatch = (\r\n            animal['시, 군, 구']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['동, 읍, 면']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['세부 주소']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            locationFilter === ''\r\n        );\r\n\r\n        const dateMatch = !dateFilter || (\r\n            (filterYear && dateFound.getFullYear() === filterYear) &&\r\n            (!filterMonth || dateFound.getMonth() + 1 === filterMonth) &&\r\n            (!filterDay || dateFound.getDate() === filterDay)\r\n        );\r\n\r\n        const genderMatch = (\r\n            animal['성별'] === genderFilter || \r\n            genderFilter === ''\r\n        );\r\n\r\n        const typeMatch = (\r\n            animal['종류'] === typeFilter || \r\n            typeFilter === ''\r\n        );\r\n\r\n        return locationMatch && dateMatch && genderMatch && typeMatch;\r\n    });\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4\">\r\n            <p className=\"text-center mb-4\"><strong>총 발견된 동물 수: {filteredAnimals.length}</strong></p>\r\n            <div className=\"filters mb-4\">\r\n                <Filter \r\n                    setLocationFilter={setLocationFilter} \r\n                    setDateFilter={setDateFilter} \r\n                    setGenderFilter={setGenderFilter}\r\n                    setTypeFilter={setTypeFilter}\r\n                />\r\n                <div className=\"my-4 flex justify-center gap-4\">\r\n                    <button onClick={applyFilters} className=\"bg-blue-500 text-white py-2 px-4 rounded\">필터 적용</button>\r\n                </div>\r\n            </div>\r\n            <section id=\"dog-list\">\r\n                <div className=\"dog-list grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\r\n                    {filteredAnimals.length > 0 ? (\r\n                        filteredAnimals.map(animal => (\r\n                            <DogCard key={animal['이름']} dog={animal} />\r\n                        ))\r\n                    ) : (\r\n                        <p className=\"text-center\">선택한 필터에 맞는 강아지가 없습니다.</p>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FoundAnimals;\r\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport DogCard from './components/DogCard'\nimport DogDetails from './components/DogDetails';\nimport Filter from './components/Filter';\nimport LoadCSV from './components/LoadCSV';\nimport LostAnimals from './components/LostAnimals';\nimport FoundAnimals from './components/FoundAnimals';\nimport './App.css';\nimport './index.css';\n\nconst App = () => {\n    const [dogs, setDogs] = useState([]);\n    const [foundDogs, setFoundDogs] = useState([]);\n    const [locationFilter, setLocationFilter] = useState('');\n    const [dateFilter, setDateFilter] = useState('');\n    const [genderFilter, setGenderFilter] = useState('');\n    const [typeFilter, setTypeFilter] = useState('');\n\n    useEffect(() => {\n        // Fetch the CSV data and set the state\n    }, []);\n\n    return (\n        <Router basename=\"/ghappydog\">\n            <LoadCSV setLostAnimals={setDogs} setFoundAnimals={setFoundDogs} />\n            <div className=\"container\">\n                <header>\n                    <h1><Link to=\"/\" onClick={() => window.location.reload()}>지해피독 유실 동물 리스트</Link></h1>\n                    <p>지해피독에 오신 것을 환영합니다. 여기서 유실된 강아지 정보를 찾고 주인과 다시 만날 수 있도록 도와주세요.</p>\n                    <nav className=\"nav-list\">\n                        <Link to=\"/lost\">유실동물</Link>\n                        <Link to=\"/found\">발견 동물</Link>\n                    </nav>\n                </header>\n                <Routes>\n                    <Route path=\"/lost\" element={<LostAnimals lostAnimals={dogs} />} />\n                    <Route path=\"/found\" element={<FoundAnimals foundAnimals={foundDogs} />} />\n                    <Route path=\"/dog-details/:name\" element={<DogDetails animals={dogs.concat(foundDogs)} />} />\n                    <Route path=\"/\" element={<LostAnimals lostAnimals={dogs} />} />\n                </Routes>\n            </div>\n        </Router>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}