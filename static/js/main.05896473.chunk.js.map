{"version":3,"sources":["components/DogCard.js","components/DogDetails.js","components/Filter.js","components/LoadCSV.js","components/LostAnimals.js","components/FoundAnimals.js","App.js","reportWebVitals.js","index.js"],"names":["DogCard","_ref","dog","imageUrl","concat","process","replace","match","toLowerCase","React","createElement","className","src","alt","href","target","rel","style","display","wordWrap","Link","to","DogDetails","animals","name","useParams","find","additionalImages","map","image","rowSpan","border","img","index","key","Filter","setLocationFilter","setDateFilter","setGenderFilter","setTypeFilter","location","setLocation","useState","date","setDate","gender","setGender","type","setType","value","onChange","e","placeholder","onClick","resetFilters","LoadCSV","setLostAnimals","setFoundAnimals","useEffect","loadCSV","url","setData","fetch","then","response","text","csvText","Papa","parse","header","dynamicTyping","complete","result","data","catch","error","console","LostAnimals","lostAnimals","locationFilter","dateFilter","genderFilter","typeFilter","filteredAnimals","filter","animal","_animal$시군구","_animal$동읍면","_animal$세부주소","dateLost","Date","filterYear","filterMonth","filterDay","split","Number","locationMatch","includes","dateMatch","getFullYear","getMonth","getDate","genderMatch","typeMatch","length","id","FoundAnimals","foundAnimals","dateFound","App","dogs","setDogs","foundDogs","setFoundDogs","Router","basename","window","reload","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.05896473.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DogCard = ({ dog }) => {\r\n    const imageUrl = dog['이미지']\r\n        ? `${process.env.PUBLIC_URL}/images/${dog['이미지'].replace(/\\.([a-zA-Z]+)$/, match => match.toLowerCase())}`\r\n        : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n\r\n    return (\r\n        <div className=\"dog-card border p-4 rounded shadow-lg relative\">\r\n            <img src={imageUrl} alt={dog['이름']} className=\"w-full h-48 object-cover rounded mb-4\" />\r\n            <h2>{dog['이름']}</h2>\r\n            <div className=\"dog-card-info\">\r\n                <p className=\"info\"><strong>유실 날짜:</strong> {dog['유실 날짜']}</p>\r\n                <p className=\"info\"><strong>성별 (중성화):</strong> {dog['성별']} ({dog['중성화']})</p>\r\n                <p className=\"info\"><strong>견종/묘종:</strong> {dog['견종/묘종']}</p>\r\n                <p className=\"info\"><strong>유실 장소:</strong> {dog['도']} {dog['시, 군, 구']} {dog['동, 읍, 면']} {dog['세부 주소']}</p>\r\n                {dog['URL'] && (\r\n                    <p className=\"info\">\r\n                        <strong>카톡 오픈채팅:</strong>\r\n                        <a href={dog['URL']} target=\"_blank\" rel=\"noopener noreferrer\" style={{ display: 'inline-block', wordWrap: 'break-word' }}>{dog['URL']}</a>\r\n                    </p>\r\n                )}\r\n            </div>\r\n            <div className=\"more-details-container\">\r\n                <Link to={`/dog-details/${dog['이름']}`} className=\"more-details\">더 보기 ...</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DogCard;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst DogDetails = ({ animals }) => {\r\n    const { name } = useParams();\r\n    const dog = animals.find(dog => dog['이름'] === name);\r\n\r\n    if (!dog) {\r\n        return <p>해당 강아지를 찾을 수 없습니다.</p>;\r\n    }\r\n\r\n    const imageUrl = dog['이미지']\r\n        ? `${process.env.PUBLIC_URL}/images/${dog['이미지'].replace(/\\.([a-zA-Z]+)$/, match => match.toLowerCase())}`\r\n        : `${process.env.PUBLIC_URL}/images/default_photo.jpg`;\r\n\r\n    const additionalImages = [\r\n        dog['추가 이미지1'],\r\n        dog['추가 이미지2'],\r\n        dog['추가 이미지3'],\r\n        dog['추가 이미지4']\r\n    ].map(image => image ? `${process.env.PUBLIC_URL}/images/closeup/${image.replace(/\\.([a-zA-Z]+)$/, match => match.toLowerCase())}` : `${process.env.PUBLIC_URL}/images/default_photo.jpg`);\r\n\r\n    return (\r\n        <div className=\"dog-details container mx-auto p-4\">\r\n            <div className=\"dog-details-header\">\r\n                <h2>{dog['이름']}</h2>\r\n            </div>\r\n            <div className=\"dog-details-content\">\r\n                <table className=\"dog-details-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td rowSpan=\"8\" className=\"dog-details-image\" border=\"none\">\r\n                                <img src={imageUrl} alt={dog['이름']} className=\"dog-details-img\" />\r\n                            </td>\r\n                            <td><strong>유실 날짜:</strong></td>\r\n                            <td>{dog['유실 날짜']}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>성별 (중성화):</strong></td>\r\n                            <td>{dog['성별']} ({dog['중성화']})</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>견종/묘종:</strong></td>\r\n                            <td>{dog['견종/묘종']}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>색상:</strong></td>\r\n                            <td>{dog['색상']}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>몸무게:</strong></td>\r\n                            <td>{dog['몸무게']}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>유실 장소:</strong></td>\r\n                            <td>{`${dog['도']} ${dog['시, 군, 구']} ${dog['동, 읍, 면']} ${dog['세부 주소']}`}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>세부 특징:</strong></td>\r\n                            <td>{dog['그 외 세부 특징']}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>마지막 목격 지역:</strong></td>\r\n                            <td>{dog['마지막 제보 지역']}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>인식칩:</strong></td>\r\n                            <td>{dog['인식칩']}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"additional-images-section\">\r\n                <p><strong>상세 이미지: </strong></p><br />\r\n                <div className=\"additional-images mt-4\">\r\n                    {additionalImages.map((img, index) => (\r\n                        <img key={index} src={img} alt={`${dog['이름']} 추가 이미지 ${index + 1}`} className=\"additional-image rounded shadow-lg\" />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DogDetails;\r\n","// Filter.js with minor JSX adjustments to match the new CSS\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst Filter = ({ setLocationFilter, setDateFilter, setGenderFilter, setTypeFilter }) => {\r\n    const [location, setLocation] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [type, setType] = useState('');\r\n\r\n    const handleLocationChange = (e) => {\r\n        setLocation(e.target.value);\r\n        setLocationFilter(e.target.value);\r\n    };\r\n\r\n    const handleDateChange = (e) => {\r\n        setDate(e.target.value);\r\n        setDateFilter(e.target.value);\r\n    };\r\n\r\n    const handleGenderChange = (e) => {\r\n        setGender(e.target.value);\r\n        setGenderFilter(e.target.value);\r\n    };\r\n\r\n    const handleTypeChange = (e) => {\r\n        setType(e.target.value);\r\n        setTypeFilter(e.target.value);\r\n    };\r\n\r\n    const resetFilters = () => {\r\n        setLocation('');\r\n        setDate('');\r\n        setGender('');\r\n        setType('');\r\n        setLocationFilter('');\r\n        setDateFilter('');\r\n        setGenderFilter('');\r\n        setTypeFilter('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"filter-container\">\r\n            <div className=\"filter\">\r\n                <label>\r\n                    위치 필터:\r\n                    <input type=\"text\" value={location} onChange={handleLocationChange} />\r\n                </label>\r\n                <label>\r\n                    유실 날짜 필터:\r\n                    <input type=\"text\" placeholder=\"yyyy, yyyy-mm, yyyy-mm-dd\" value={date} onChange={handleDateChange} />\r\n                </label>\r\n                <label>\r\n                    성별 필터:\r\n                    <select value={gender} onChange={handleGenderChange}>\r\n                        <option value=\"\">All</option>\r\n                        <option value=\"암\">암</option>\r\n                        <option value=\"수\">수</option>\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    종류 필터:\r\n                    <select value={type} onChange={handleTypeChange}>\r\n                        <option value=\"\">All</option>\r\n                        <option value=\"개\">개</option>\r\n                        <option value=\"고양이\">고양이</option>\r\n                    </select>\r\n                </label>\r\n            </div>\r\n            <div className=\"filter-buttons\">\r\n                <button onClick={resetFilters}>필터 초기화</button>\r\n                <button>필터 적용</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import { useEffect } from 'react';\r\nimport Papa from 'papaparse';\r\n\r\nconst LoadCSV = ({ setLostAnimals, setFoundAnimals }) => {\r\n    useEffect(() => {\r\n        const loadCSV = (url, setData) => {\r\n            fetch(url)\r\n                .then(response => response.text())\r\n                .then(csvText => {\r\n                    Papa.parse(csvText, {\r\n                        header: true,\r\n                        dynamicTyping: true,\r\n                        complete: (result) => {\r\n                            setData(result.data);\r\n                        },\r\n                    });\r\n                })\r\n                .catch(error => console.error(`Error fetching ${url}:`, error));\r\n        };\r\n\r\n        loadCSV(`${process.env.PUBLIC_URL}/지해피독 수색용 유실견 리스트.csv`, setLostAnimals);\r\n        loadCSV(`${process.env.PUBLIC_URL}/지해피독_찾음.csv`, setFoundAnimals);\r\n    }, [setLostAnimals, setFoundAnimals]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default LoadCSV;\r\n","import React, { useState } from 'react';\r\nimport DogCard from './DogCard';\r\nimport Filter from './Filter';\r\n\r\nconst LostAnimals = ({ lostAnimals }) => {\r\n    const [locationFilter, setLocationFilter] = useState('');\r\n    const [dateFilter, setDateFilter] = useState('');\r\n    const [genderFilter, setGenderFilter] = useState('');\r\n    const [typeFilter, setTypeFilter] = useState('');\r\n\r\n    const applyFilters = () => {\r\n        // Filters are always applied through state changes\r\n    };\r\n\r\n    const resetFilters = () => {\r\n        setLocationFilter('');\r\n        setDateFilter('');\r\n        setGenderFilter('');\r\n        setTypeFilter('');\r\n    };\r\n\r\n    const filteredAnimals = lostAnimals.filter(animal => {\r\n        if (!animal || !animal['유실 날짜']) {\r\n            return false;\r\n        }\r\n        const dateLost = new Date(animal['유실 날짜'].replace(/\\./g, '-'));\r\n        const [filterYear, filterMonth, filterDay] = dateFilter.split('-').map(Number);\r\n\r\n        const locationMatch = (\r\n            animal['시, 군, 구']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['동, 읍, 면']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['세부 주소']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            locationFilter === ''\r\n        );\r\n\r\n        const dateMatch = !dateFilter || (\r\n            (filterYear && dateLost.getFullYear() === filterYear) &&\r\n            (!filterMonth || dateLost.getMonth() + 1 === filterMonth) &&\r\n            (!filterDay || dateLost.getDate() === filterDay)\r\n        );\r\n\r\n        const genderMatch = (\r\n            animal['성별'] === genderFilter || \r\n            genderFilter === ''\r\n        );\r\n\r\n        const typeMatch = (\r\n            animal['종류'] === typeFilter || \r\n            typeFilter === ''\r\n        );\r\n\r\n        return locationMatch && dateMatch && genderMatch && typeMatch;\r\n    });\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4\">\r\n            <p className=\"text-center mb-4\"><strong>총 유실동물 수: {filteredAnimals.length}</strong></p>\r\n            <div className=\"filters mb-4\">\r\n                <Filter \r\n                    setLocationFilter={setLocationFilter} \r\n                    setDateFilter={setDateFilter} \r\n                    setGenderFilter={setGenderFilter}\r\n                    setTypeFilter={setTypeFilter}\r\n                />\r\n            </div>\r\n            <section id=\"dog-list\">\r\n                <div className=\"dog-list grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\r\n                    {filteredAnimals.length > 0 ? (\r\n                        filteredAnimals.map(animal => (\r\n                            <DogCard key={animal['이름']} dog={animal} />\r\n                        ))\r\n                    ) : (\r\n                        <p className=\"text-center\">선택한 필터에 맞는 강아지가 없습니다.</p>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LostAnimals;\r\n","import React, { useState } from 'react';\r\nimport DogCard from './DogCard';\r\nimport Filter from './Filter';\r\n\r\nconst FoundAnimals = ({ foundAnimals }) => {\r\n    const [locationFilter, setLocationFilter] = useState('');\r\n    const [dateFilter, setDateFilter] = useState('');\r\n    const [genderFilter, setGenderFilter] = useState('');\r\n    const [typeFilter, setTypeFilter] = useState('');\r\n\r\n    const applyFilters = () => {\r\n        // Filters are always applied through state changes\r\n    };\r\n\r\n    const resetFilters = () => {\r\n        setLocationFilter('');\r\n        setDateFilter('');\r\n        setGenderFilter('');\r\n        setTypeFilter('');\r\n    };\r\n\r\n    const filteredAnimals = foundAnimals.filter(animal => {\r\n        if (!animal || !animal['유실 날짜']) {\r\n            return false;\r\n        }\r\n        const dateFound = new Date(animal['유실 날짜'].replace(/\\./g, '-'));\r\n        const [filterYear, filterMonth, filterDay] = dateFilter.split('-').map(Number);\r\n\r\n        const locationMatch = (\r\n            animal['시, 군, 구']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['동, 읍, 면']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            animal['세부 주소']?.toLowerCase().includes(locationFilter.toLowerCase()) || \r\n            locationFilter === ''\r\n        );\r\n\r\n        const dateMatch = !dateFilter || (\r\n            (filterYear && dateFound.getFullYear() === filterYear) &&\r\n            (!filterMonth || dateFound.getMonth() + 1 === filterMonth) &&\r\n            (!filterDay || dateFound.getDate() === filterDay)\r\n        );\r\n\r\n        const genderMatch = (\r\n            animal['성별'] === genderFilter || \r\n            genderFilter === ''\r\n        );\r\n\r\n        const typeMatch = (\r\n            animal['종류'] === typeFilter || \r\n            typeFilter === ''\r\n        );\r\n\r\n        return locationMatch && dateMatch && genderMatch && typeMatch;\r\n    });\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4\">\r\n            <p className=\"text-center mb-4\"><strong>총 발견된 동물 수: {filteredAnimals.length}</strong></p>\r\n            <div className=\"filters mb-4\">\r\n                <Filter \r\n                    setLocationFilter={setLocationFilter} \r\n                    setDateFilter={setDateFilter} \r\n                    setGenderFilter={setGenderFilter}\r\n                    setTypeFilter={setTypeFilter}\r\n                />\r\n            </div>\r\n            <section id=\"dog-list\">\r\n                <div className=\"dog-list grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\r\n                    {filteredAnimals.length > 0 ? (\r\n                        filteredAnimals.map(animal => (\r\n                            <DogCard key={animal['이름']} dog={animal} />\r\n                        ))\r\n                    ) : (\r\n                        <p className=\"text-center\">선택한 필터에 맞는 강아지가 없습니다.</p>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FoundAnimals;\r\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport DogCard from './components/DogCard';\nimport DogDetails from './components/DogDetails';\nimport Filter from './components/Filter';\nimport LoadCSV from './components/LoadCSV';\nimport LostAnimals from './components/LostAnimals';\nimport FoundAnimals from './components/FoundAnimals';\nimport './App.css'; // Ensure this import is present if you have App-specific styles\nimport './index.css'; // Ensure this import is present\n\nconst App = () => {\n    const [dogs, setDogs] = useState([]);\n    const [foundDogs, setFoundDogs] = useState([]);\n    const [locationFilter, setLocationFilter] = useState('');\n    const [dateFilter, setDateFilter] = useState('');\n    const [genderFilter, setGenderFilter] = useState('');\n    const [typeFilter, setTypeFilter] = useState('');\n\n    useEffect(() => {\n        // Fetch the CSV data and set the state\n    }, []);\n\n    return (\n        <Router basename=\"/ghappydog\">\n            <LoadCSV setLostAnimals={setDogs} setFoundAnimals={setFoundDogs} />\n            <div className=\"container\">\n                <header>\n                    <h1><Link to=\"/\" onClick={() => window.location.reload()}>지해피독 유실 동물 리스트</Link></h1>\n                    <p>지해피독에 오신 것을 환영합니다. 여기서 유실된 강아지 정보를 찾고 주인과 다시 만날 수 있도록 도와주세요.</p>\n                    <nav className=\"nav-list\">\n                        <Link to=\"/lost\">유실 동물</Link>\n                        <Link to=\"/found\">완료 동물</Link>\n                    </nav>\n                </header>\n                <Routes>\n                    <Route path=\"/lost\" element={<LostAnimals lostAnimals={dogs} />} />\n                    <Route path=\"/found\" element={<FoundAnimals foundAnimals={foundDogs} />} />\n                    <Route path=\"/dog-details/:name\" element={<DogDetails animals={dogs.concat(foundDogs)} />} />\n                </Routes>\n            </div>\n        </Router>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}